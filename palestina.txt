/* VARIABLES */

/* ROOM */

const roomName = 'FHE ROOM 2';
const maxPlayers = 30;
const roomPublic = false;

// GEOLOCALIZATION //
const geo = [{"code": "VE", "lat": 40, "lon": -3}];

var roomWebhook = 'https://discord.com/api/webhooks/1402040644842553494/OgGoauaT5er8Qf0D7vCxahpEhIeV3TkNjiL5N7ZWhOK9quoYeAb-3ZNkkO6QxU-ixanx'; // this webhook is used to send the details of the room (chat, join, leave) ; it should be in a private discord channel
var gameWebhook = 'https://discord.com/api/webhooks/1420147618054672447/CPxCyB1rgCqhOzfEZR8BNY_reiJjhowcfT0_-bO8WTPfFkBg3irDxD_n1cT5anvPn8Od'; // this webhook is used to send the summary of the games ; it should be in a public discord channel
var fetchRecordingVariable = true;
var timeLimit = 0;
var scoreLimit = 0;

var gameConfig = {
    roomName: roomName,
    maxPlayers: maxPlayers,
    public: roomPublic,
    noPlayer: true,
    geo: geo[0],
}

if (typeof token == 'string' && token.length == 39) {
    gameConfig.token = token;
}

var room = HBInit(gameConfig);

const trainingMap = `{"name":"üí™ Entrenamiento üî¥‚ö´ FEH ‚≠ê |","width":1275,"height":630,"spawnDistance":350,"redSpawnPoints":[[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-396,635]],"blueSpawnPoints":[[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[396,635]],"bg":{"type":"","height":0,"width":0,"color":"404040"},"vertexes":[{"x":-1200,"y":-120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12},{"x":-1240,"y":-120,"cMask":["ball"],"trait":"goalNet","curve":0,"color":"db9b30","bias":-12},{"x":-1240,"y":120,"cMask":["ball"],"trait":"goalNet","curve":0,"color":"db9b30","radius":7,"bias":-12},{"x":-1200,"y":120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12},{"x":1200,"y":-120,"trait":"goalNet","curve":0,"color":"db9b30","bias":-12,"pos":[1200,-120]},{"x":1240,"y":-120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12,"pos":[1200,-120]},{"x":1240,"y":120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12,"pos":[1200,120]},{"x":1200,"y":120,"trait":"goalNet","curve":0,"color":"db9b30","bias":-12,"pos":[1200,120]},{"x":1200,"y":600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"color":"a3a3a3","bias":12},{"x":1200,"y":-600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12,"color":"a3a3a3"},{"x":-1200,"y":600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"bias":-12,"color":"a3a3a3"},{"x":-1200,"y":-600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"bias":-12,"color":"a3a3a3"},{"x":-1200,"y":570.456511053482,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":-1171.6369452864983,"y":600,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":-1200,"y":-569.6420271253103,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":-1170.6369452864983,"y":-600,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":1200,"y":-571.0124590189979,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":1170.319141439366,"y":-600,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":1200,"y":569.9997004222528,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":1171.319141439366,"y":600,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":-1200,"y":120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":-12},{"x":-1200,"y":-120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":12},{"x":1200,"y":120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":12,"pos":[1200,120]},{"x":1200,"y":-120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":-12},{"x":0,"y":180,"bCoef":0,"trait":"kickOffBarrier","color":"d9a03f","radius":3,"vis":false},{"x":0,"y":600,"bCoef":0,"trait":"kickOffBarrier","color":"d9a03f","vis":false},{"x":0,"y":-180,"bCoef":0,"trait":"kickOffBarrier","color":"d9a03f","radius":3,"vis":false},{"x":0,"y":-600,"bCoef":0,"trait":"kickOffBarrier","color":"d9a03f","vis":false},{"x":0,"y":-180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"d9a03f","radius":3,"vis":false},{"x":0,"y":180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"d9a03f","radius":3,"vis":false},{"x":0,"y":-180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"d9a03f","radius":3,"vis":false},{"x":0,"y":180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"d9a03f","radius":3,"vis":false},{"x":0,"y":600,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":0,"y":630,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":0,"y":-630,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":0,"y":-600,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":-1240,"y":-120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0,"vis":true},{"x":-1240,"y":120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0,"vis":true},{"x":1240,"y":-120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0},{"x":1240,"y":120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0},{"x":1260,"y":-135,"cMask":["ball"],"cGroup":["wall"],"pos":[1260,-135],"color":"db9b30","curve":0},{"x":1260,"y":135,"cMask":["ball"],"cGroup":["wall"],"pos":[1260,135],"color":"db9b30","curve":0},{"x":-1260,"y":-135,"cMask":["ball"],"cGroup":["wall"],"vis":true,"curve":0,"color":"db9b30","pos":[-1260,-135]},{"x":-1260,"y":135,"cMask":["ball"],"cGroup":["wall"],"vis":true,"curve":0,"color":"db9b30"},{"x":-1240,"y":-81.33333333333334,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-62.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-44.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-24.33333333333333,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-6.333333333333329,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":13.666666666666671,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":27.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":46.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":64.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":84.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-81.33333333333334,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-62.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-44.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-24.33333333333333,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-6.333333333333329,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":13.666666666666671,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":27.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":46.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":64.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":84.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1200,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"5689e5","curve":0},{"x":1200,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"5689e5","curve":0},{"x":-1200,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"E74C3C","curve":0},{"x":-1200,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"E74C3C","curve":0},{"x":-1202,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-1202,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-1198,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-1198,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1198,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1198,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1202,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1202,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-823,"y":406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-823,"y":-406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":823,"y":406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":823,"y":-406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":-823,"y":135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":90,"color":"595959"},{"x":-823,"y":-135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959","curve":90},{"x":823,"y":135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":-90,"color":"595959"},{"x":823,"y":-135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959","curve":-90},{"x":-1098,"y":181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-1098,"y":-181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":1097,"y":181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":1097,"y":-181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":1098,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":1198,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":1098,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":1198,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":-1198,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-1097,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":-1198,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-1097,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-1198,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-822,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-1198,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":822,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":1198,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":1198,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-943,"y":2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":-943,"y":-2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":943,"y":2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":943,"y":-2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":2.9695651916130616,"y":113.03330221544363,"trait":"line","curve":180,"color":"db9b30","radius":3,"vis":false},{"x":2.9695651916130616,"y":-113.18685408673008,"trait":"line","curve":180,"color":"db9b30","radius":3,"vis":false},{"x":-24.960381301201835,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-24.960381301201835,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":22.23366506640204,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":-10.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":6.498444495029986,"y":-10.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-8.24388732159008,"y":7.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":5.517171086790285,"y":7.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":29.19606950451476,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":-8.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":24.196211882881443,"y":-33.1,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":24.196211882881443,"y":32.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-8.24388732159008,"y":-8.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":6.498444495029986,"y":-8.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":-7.48205478412626,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":5.517171086790285,"y":-33,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":5.517171086790285,"y":-7.48205478412626,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-25.941654709441536,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-4.318793688631274,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.150729809909251,"y":-31.65840204850487,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":22.829770606000437,"y":-31.65840204850487,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":6.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":32.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":6.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":25.177485291121144,"y":31.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":3.5546242703108817,"y":31.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":21.848497197760736,"y":-31.65840204850487,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":21.848497197760736,"y":30.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-6.281340505110677,"y":9.553456256165113,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":3.5546242703108817,"y":9.553456256165113,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.531628316868847,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-25.229395704720332,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.569081500389473,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-26.410669112960036,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":10.341597951495128,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":49.37295203213148,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":49.37295203213148,"y":30.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":29.396470187210383,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":69.03326623646234,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":69.03326623646234,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":66.08944601174323,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":48.39167862389178,"y":-31.325068715171543,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68,"y":-31.325068715171543,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":66.80170501646447,"y":28.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":49.10393762861298,"y":28.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.76425183294384,"y":30.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":48,"y":30.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":69.03326623646234,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.33333333333334,"y":-8.666666666666668,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":-8.666666666666668,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":5.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.33333333333334,"y":5.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":100,"y":7.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.33333333333334,"y":7.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":98.66666666666666,"y":-10.166666666666668,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":98.66666666666666,"y":8.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":67.66666666666666,"y":-31.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":-31.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":-17.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":-17.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":99.66666666666666,"y":-15.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":-15.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":98.66666666666666,"y":-32.833333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":98.66666666666666,"y":-14.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":67.66666666666666,"y":14.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":14.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":28.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":28.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":99.66666666666666,"y":30.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":30.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":98.66666666666666,"y":13.166666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":98.66666666666666,"y":31.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":-98.29371463453515,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-98.29371463453515,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.63340043020435,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.63340043020435,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-81.5772206549234,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-99.27498804277491,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.66666666666663,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.86496165020219,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-98.5627290380537,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.90241483372279,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-99.74400244629336,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.63340043020435,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.33333333333331,"y":-8.66666666666666,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49.333333333333314,"y":-8.66666666666666,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49.333333333333314,"y":5.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.33333333333331,"y":5.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-47.333333333333314,"y":7.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.33333333333331,"y":7.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-48.333333333333314,"y":-10.16666666666666,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-48.333333333333314,"y":8.33333333333334,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":-31.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-50,"y":-31.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-50,"y":-17.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":-17.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-48,"y":-15.333333333333329,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":-15.333333333333329,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49,"y":-32.83333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49,"y":-14.333333333333329,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":28.66666666666667,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":30.66666666666667,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":1246.3333333333335,"y":-124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":1251.3333333333335,"y":-128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":1246.3333333333335,"y":124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":1251.3333333333335,"y":128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":-1251.3333333333335,"y":-128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":-1251.3333333333335,"y":128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":-1246.3333333333335,"y":-124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":-1246.3333333333335,"y":124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":-150,"y":630,"bCoef":1,"cMask":["red","blue","ball"],"trait":"pared-invisible","bias":12,"color":"505050","vis":true},{"x":-150,"y":-630,"bCoef":1,"cMask":["red","blue","ball"],"trait":"pared-invisible","bias":12,"color":"505050","vis":true},{"x":150,"y":630,"bCoef":1,"cMask":["red","blue","ball"],"trait":"pared-invisible","bias":-12,"color":"505050","vis":true},{"x":150,"y":-630,"bCoef":1,"cMask":["red","blue","ball"],"trait":"pared-invisible","bias":-12,"color":"505050","vis":true}],"segments":[{"v0":0,"v1":1,"curve":0,"color":"db9b30","trait":"goalNet","bias":12,"y":-120},{"v0":2,"v1":3,"curve":0,"color":"db9b30","trait":"goalNet","bias":12,"y":120},{"v0":4,"v1":5,"curve":0,"color":"db9b30","trait":"goalNet","bias":-12,"y":-120,"pos":[1200,-120]},{"v0":6,"v1":7,"curve":0,"color":"db9b30","trait":"goalNet","bias":-12,"y":120,"pos":[1200,120]},{"v0":13,"v1":12,"curve":-90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":15,"v1":14,"curve":90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":17,"v1":16,"curve":-90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":19,"v1":18,"curve":90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":2,"v1":1,"curve":0,"vis":true,"color":"db9b30","bCoef":0,"cMask":["ball"],"trait":"goalNet","bias":-12,"x":-1240},{"v0":6,"v1":5,"curve":0,"vis":true,"color":"db9b30","bCoef":0,"trait":"goalNet","bias":12,"x":1240},{"v0":10,"v1":20,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12},{"v0":11,"v1":21,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":12},{"v0":8,"v1":22,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":12},{"v0":9,"v1":23,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12},{"v0":24,"v1":25,"curve":0,"vis":false,"color":"d9a03f","bCoef":0,"trait":"kickOffBarrier","x":0},{"v0":26,"v1":27,"curve":0,"vis":false,"color":"d9a03f","bCoef":0,"trait":"kickOffBarrier","x":0},{"v0":28,"v1":29,"curve":-180,"vis":false,"color":"d9a03f","cGroup":["blueKO"],"trait":"kickOffBarrier","radius":3},{"v0":30,"v1":31,"curve":180,"vis":false,"color":"d9a03f","cGroup":["redKO"],"trait":"kickOffBarrier","radius":3},{"v0":32,"v1":33,"curve":0,"vis":false,"color":"b3b6b6","bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","x":0},{"v0":34,"v1":35,"curve":0,"vis":false,"color":"b3b6b6","bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","x":0},{"v0":10,"v1":8,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"trait":"ballArea","bias":12},{"v0":11,"v1":9,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12},{"v0":38,"v1":40,"curve":0,"color":"db9b30","cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":39,"v1":41,"curve":0,"color":"db9b30","cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":43,"v1":37,"curve":0,"vis":true,"color":"db9b30","bCoef":0.5,"cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":42,"v1":36,"curve":0,"vis":true,"color":"db9b30","cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":44,"v1":45,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":46,"v1":47,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":49,"v1":48,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":50,"v1":51,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":52,"v1":53,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":54,"v1":55,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":56,"v1":57,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":59,"v1":58,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":60,"v1":61,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":62,"v1":63,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":64,"v1":65,"curve":0,"vis":true,"color":"5689e5","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":1200},{"v0":66,"v1":67,"curve":0,"vis":true,"color":"E74C3C","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":-1200},{"v0":68,"v1":69,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":-1202},{"v0":70,"v1":71,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":-1198},{"v0":72,"v1":73,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":1198},{"v0":74,"v1":75,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":1202},{"v0":77,"v1":76,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-725},{"v0":78,"v1":79,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":725},{"v0":81,"v1":80,"curve":90,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-725},{"v0":83,"v1":82,"curve":-90,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":725},{"v0":85,"v1":84,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-1000},{"v0":87,"v1":86,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":999},{"v0":89,"v1":88,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":630,"y":-180},{"v0":91,"v1":90,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":630,"y":180},{"v0":93,"v1":92,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-698,"y":-180},{"v0":95,"v1":94,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-698,"y":180},{"v0":98,"v1":99,"color":"595959","cMask":["c0"],"cGroup":["c0"]},{"v0":100,"v1":101,"color":"595959","cMask":["c0"],"cGroup":["c0"],"y":-405},{"v0":102,"v1":103,"color":"595959","cMask":["c0"],"cGroup":["c0"],"y":-405},{"v0":104,"v1":105,"color":"595959","cMask":["c0"],"cGroup":["c0"]},{"v0":106,"v1":107,"curve":0,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":-845},{"v0":107,"v1":106,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":-845},{"v0":106,"v1":107,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":-845},{"v0":108,"v1":109,"curve":0,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":845},{"v0":109,"v1":108,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":845},{"v0":108,"v1":109,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":845},{"v0":110,"v1":111,"curve":186.38082131014062,"vis":false,"color":"db9b30","trait":"line","radius":3},{"v0":111,"v1":110,"curve":179.0180912216902,"vis":false,"color":"db9b30","trait":"line","radius":3},{"v0":117,"v1":118,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":121,"v1":122,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":15},{"v0":112,"v1":115,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-40},{"v0":124,"v1":125,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":126,"v1":127,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-7.613020714773503},{"v0":128,"v1":129,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":-5.815388117459595},{"v0":130,"v1":113,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":131,"v1":132,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":133,"v1":134,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":135,"v1":136,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":137,"v1":116,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-39.67220578192579},{"v0":139,"v1":138,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-27.648531755064877},{"v0":140,"v1":141,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":34.063136853877054},{"v0":142,"v1":143,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":144,"v1":145,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":12.220122922831779},{"v0":146,"v1":147,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":148,"v1":149,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":34.063136853877054},{"v0":150,"v1":151,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":152,"v1":154,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-40},{"v0":157,"v1":158,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":160,"v1":153,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":161,"v1":162,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":163,"v1":164,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":165,"v1":166,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":34.063136853877054},{"v0":168,"v1":169,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":169,"v1":170,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":97.66666666666666},{"v0":170,"v1":171,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":172,"v1":173,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":174,"v1":175,"curve":0,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":98.66666666666666},{"v0":176,"v1":177,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":177,"v1":178,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":178,"v1":179,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":180,"v1":181,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":182,"v1":183,"curve":0,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-180},{"v0":184,"v1":185,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":185,"v1":186,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":186,"v1":187,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":188,"v1":189,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":190,"v1":191,"curve":0,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-179},{"v0":192,"v1":194,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-40},{"v0":197,"v1":198,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":200,"v1":193,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":201,"v1":202,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":203,"v1":204,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":205,"v1":206,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":30.72980352054372},{"v0":208,"v1":209,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":209,"v1":210,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":210,"v1":211,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":212,"v1":213,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":214,"v1":215,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-179},{"v0":216,"v1":217,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":217,"v1":218,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":218,"v1":219,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":220,"v1":221,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":222,"v1":223,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-180},{"v0":226,"v1":227,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":228,"v1":229,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":231,"v1":233,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":230,"v1":232,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":234,"v1":235,"curve":0,"vis":true,"color":"505050","bCoef":1,"cMask":["red","blue","ball"],"trait":"pared-invisible","bias":12,"x":-150},{"v0":236,"v1":237,"curve":0,"vis":true,"color":"505050","bCoef":1,"cMask":["red","blue","ball"],"trait":"pared-invisible","bias":-12,"x":150}],"goals":[],"discs":[{"radius":6.4,"pos":[1200,120],"color":"db9b30","bCoef":1,"trait":"goalPost","y":120},{"radius":6.4,"pos":[1200,-120],"color":"db9b30","bCoef":1,"trait":"goalPost","y":-120},{"radius":6.4,"pos":[-1200,120],"color":"db9b30","bCoef":1,"trait":"goalPost"},{"radius":6.4,"pos":[-1200,-120],"color":"db9b30","bCoef":1,"trait":"goalPost"},{"radius":3,"invMass":0,"pos":[1260,135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0],"x":1260,"y":135},{"radius":3,"invMass":0,"pos":[1260,-135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0],"x":1260,"y":-135},{"radius":3,"invMass":0,"pos":[-1260,135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":3,"invMass":0,"pos":[-1260,-135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0],"y":-135,"x":-1260},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,-112.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,-87.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,-62.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,-37.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,-12.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,12.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,37.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,62.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,87.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[-321.31648,112.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,-112.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,-87.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,-62.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,-37.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,-12.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,12.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,37.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,62.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,87.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"invMass":1.5,"pos":[321.31648,112.5],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick"],"damping":0.99,"speed":[0,0],"gravity":[0,0]}],"planes":[{"normal":[0,-1],"dist":-600,"bCoef":1,"trait":"ballArea","curve":0,"_data":{"extremes":{"normal":[0,-1],"dist":-600,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,600],"b":[1275,600]}}},{"normal":[0,1],"dist":-600,"bCoef":1,"trait":"ballArea","vis":false,"curve":0,"_data":{"extremes":{"normal":[0,1],"dist":-600,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,-600],"b":[1275,-600]}}},{"normal":[1,0],"dist":-1275,"bCoef":0.1,"_data":{"extremes":{"normal":[1,0],"dist":-1275,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,-630],"b":[-1275,630]}}},{"normal":[0,1],"dist":-630,"bCoef":0.1,"_data":{"extremes":{"normal":[0,1],"dist":-630,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,-630],"b":[1275,-630]}}},{"normal":[0,-1],"dist":-630,"bCoef":0.1,"_data":{"extremes":{"normal":[0,-1],"dist":-630,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,630],"b":[1275,630]}}},{"normal":[-1,0],"dist":-1275,"bCoef":0.1,"_data":{"extremes":{"normal":[-1,0],"dist":-1275,"canvas_rect":[-1275,-630,1275,630],"a":[1275,-630],"b":[1275,630]}}},{"normal":[1,0],"dist":-1250,"bCoef":0.1,"trait":"ballArea","_data":{"extremes":{"normal":[1,0],"dist":-1250,"canvas_rect":[-1275,-630,1275,630],"a":[-1250,-630],"b":[-1250,630]}}},{"normal":[-1,0],"dist":-1250,"bCoef":0.1,"trait":"ballArea","_data":{"extremes":{"normal":[-1,0],"dist":-1250,"canvas_rect":[-1275,-630,1275,630],"a":[1250,-630],"b":[1250,630]}}}],"traits":{"ballArea":{"vis":false,"bCoef":1,"cMask":["ball"]},"goalPost":{"radius":8,"invMass":0,"bCoef":0.5},"goalNet":{"vis":true,"bCoef":0.1,"cMask":["ball"]},"line":{"vis":true,"bCoef":0.1,"cMask":[""]},"kickOffBarrier":{"vis":false,"bCoef":0.1,"cGroup":["redKO","blueKO"],"cMask":["red","blue"]}},"playerPhysics":{"bCoef":0,"invMass":0.5,"damping":0.96,"acceleration":0.11,"kickingAcceleration":0.083,"kickingDamping":0.96,"kickStrength":5.45,"cGroup":["red","blue"],"gravity":[0,0],"radius":15,"kickback":0},"ballPhysics":"disc0","joints":[],"canBeStored":false,"cameraFollow":"player"}`;
const bigMap = `{"name":"üî¥‚ö´ ùôµùô∑ùô¥ ‚≠ê | “ì·¥ú·¥õx7  by ùóöùóüùóõ & FFL","width":1275,"height":630,"spawnDistance":350,"redSpawnPoints":[[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-500,0],[-396,635]],"blueSpawnPoints":[[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[500,0],[396,635]],"bg":{"type":"","height":0,"width":0,"color":"404040"},"vertexes":[{"x":-1200,"y":-120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12},{"x":-1240,"y":-120,"cMask":["ball"],"trait":"goalNet","curve":0,"color":"db9b30","bias":-12},{"x":-1240,"y":120,"cMask":["ball"],"trait":"goalNet","curve":0,"color":"db9b30","radius":7,"bias":-12},{"x":-1200,"y":120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12},{"x":1200,"y":-120,"trait":"goalNet","curve":0,"color":"db9b30","bias":-12,"pos":[1200,-120]},{"x":1240,"y":-120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12,"pos":[1200,-120]},{"x":1240,"y":120,"trait":"goalNet","curve":0,"color":"db9b30","bias":12,"pos":[1200,120]},{"x":1200,"y":120,"trait":"goalNet","curve":0,"color":"db9b30","bias":-12,"pos":[1200,120]},{"x":1200,"y":600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"color":"a3a3a3","bias":12},{"x":1200,"y":-600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12,"color":"a3a3a3"},{"x":-1200,"y":600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"bias":-12,"color":"a3a3a3"},{"x":-1200,"y":-600,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"bias":-12,"color":"a3a3a3"},{"x":-1200,"y":570.456511053482,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":-1171.6369452864983,"y":600,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":-1200,"y":-569.6420271253103,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":-1170.6369452864983,"y":-600,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":1200,"y":-571.0124590189979,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":1170.319141439366,"y":-600,"bCoef":0.1,"trait":"line","curve":-90,"color":"a3a3a3"},{"x":1200,"y":569.9997004222528,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":1171.319141439366,"y":600,"bCoef":0.1,"trait":"line","curve":90,"color":"a3a3a3"},{"x":-1200,"y":120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":-12},{"x":-1200,"y":-120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":12},{"x":1200,"y":120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":12,"pos":[1200,120]},{"x":1200,"y":-120,"bCoef":1,"trait":"ballArea","color":"a3a3a3","bias":-12},{"x":0,"y":180,"bCoef":0,"trait":"kickOffBarrier","color":"cc983f","radius":3,"_data":{"mirror":{}}},{"x":0,"y":600,"bCoef":0,"trait":"kickOffBarrier","color":"cc983f","_data":{"mirror":{}}},{"x":0,"y":-180,"bCoef":0,"trait":"kickOffBarrier","color":"cc983f","radius":3,"_data":{"mirror":{}}},{"x":0,"y":-600,"bCoef":0,"trait":"kickOffBarrier","color":"cc983f","_data":{"mirror":{}}},{"x":0,"y":-180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"cc983f","radius":3,"_data":{"mirror":{}}},{"x":0,"y":180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"cc983f","radius":3,"_data":{"mirror":{}}},{"x":0,"y":-180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"cc983f","radius":3,"_data":{"mirror":{}}},{"x":0,"y":180,"bCoef":0,"trait":"kickOffBarrier","curve":180,"color":"cc983f","radius":3,"_data":{"mirror":{}}},{"x":0,"y":600,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":0,"y":630,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":0,"y":-630,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":0,"y":-600,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","vis":false},{"x":600,"y":598.5,"bCoef":1,"cMask":["c0"],"cGroup":["c0"],"color":"515151"},{"x":600,"y":-598.5,"bCoef":1,"cMask":["c0"],"cGroup":["c0"],"color":"515151"},{"x":-600,"y":598.5,"bCoef":1,"cMask":["c0"],"cGroup":["c0"],"color":"515151"},{"x":-600,"y":-598.5,"bCoef":1,"cMask":["c0"],"cGroup":["c0"],"color":"515151"},{"x":-1240,"y":-120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0,"vis":true},{"x":-1240,"y":120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0,"vis":true},{"x":1240,"y":-120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0},{"x":1240,"y":120,"bCoef":0.2,"cMask":["ball"],"cGroup":["wall"],"color":"db9b30","curve":0},{"x":1260,"y":-135,"cMask":["ball"],"cGroup":["wall"],"pos":[1260,-135],"color":"db9b30","curve":0},{"x":1260,"y":135,"cMask":["ball"],"cGroup":["wall"],"pos":[1260,135],"color":"db9b30","curve":0},{"x":-1260,"y":-135,"cMask":["ball"],"cGroup":["wall"],"vis":true,"curve":0,"color":"db9b30","pos":[-1260,-135]},{"x":-1260,"y":135,"cMask":["ball"],"cGroup":["wall"],"vis":true,"curve":0,"color":"db9b30"},{"x":-1240,"y":-81.33333333333334,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-62.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-44.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-24.33333333333333,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":-6.333333333333329,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":13.666666666666671,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":27.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":46.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":64.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":-1240,"y":84.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-81.33333333333334,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-62.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-44.333333333333336,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-24.33333333333333,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":-6.333333333333329,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":13.666666666666671,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":27.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":46.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":64.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1240,"y":84.66666666666667,"bCoef":0.8,"cMask":["ball"],"bias":0,"color":"b5091a"},{"x":1200,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"5689e5","curve":0},{"x":1200,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"5689e5","curve":0},{"x":-1200,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"E74C3C","curve":0},{"x":-1200,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"E74C3C","curve":0},{"x":-1202,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-1202,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-1198,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-1198,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1198,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1198,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1202,"y":-120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":1202,"y":120,"bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"vis":true,"color":"404040","curve":0},{"x":-823,"y":406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-823,"y":-406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":823,"y":406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":823,"y":-406,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":-823,"y":135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":90,"color":"595959"},{"x":-823,"y":-135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959","curve":90},{"x":823,"y":135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":-90,"color":"595959"},{"x":823,"y":-135,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959","curve":-90},{"x":-1098,"y":181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-1098,"y":-181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":1097,"y":181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":1097,"y":-181,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":1098,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":1198,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":1098,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":1198,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":-1198,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-1097,"y":-180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":-1198,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","curve":0,"color":"595959"},{"x":-1097,"y":180,"cMask":["c0"],"cGroup":["c0"],"trait":"v","color":"595959"},{"x":822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-1196.5,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-822,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-1198,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":822,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":1198,"y":-405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":1198,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":822,"y":405,"cMask":["c0"],"cGroup":["c0"],"color":"595959"},{"x":-943,"y":2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":-943,"y":-2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":943,"y":2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":943,"y":-2.5,"cMask":["c0"],"cGroup":["c0"],"curve":180,"color":"595959"},{"x":2.9695651916130616,"y":113.03330221544363,"trait":"line","curve":180,"color":"db9b30","radius":3,"vis":false},{"x":2.9695651916130616,"y":-113.18685408673008,"trait":"line","curve":180,"color":"db9b30","radius":3,"vis":false},{"x":-24.960381301201835,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-24.960381301201835,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":22.23366506640204,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":-10.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":6.498444495029986,"y":-10.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-8.24388732159008,"y":7.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":5.517171086790285,"y":7.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":29.19606950451476,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":-8.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":24.196211882881443,"y":-33.1,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":24.196211882881443,"y":32.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-8.24388732159008,"y":-8.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":6.498444495029986,"y":-8.482054784126259,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":-7.48205478412626,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":5.517171086790285,"y":-33,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":5.517171086790285,"y":-7.48205478412626,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-25.941654709441536,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-4.318793688631274,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.150729809909251,"y":-31.65840204850487,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":22.829770606000437,"y":-31.65840204850487,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.262613913350378,"y":6.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":32.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":4.535897678550583,"y":6.553456256165115,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":25.177485291121144,"y":31.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":3.5546242703108817,"y":31.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":21.848497197760736,"y":-31.65840204850487,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":21.848497197760736,"y":30.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-6.281340505110677,"y":9.553456256165113,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":3.5546242703108817,"y":9.553456256165113,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-7.531628316868847,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-25.229395704720332,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.569081500389473,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-26.410669112960036,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":10.341597951495128,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-5.3000670968709755,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":49.37295203213148,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":49.37295203213148,"y":30.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":29.396470187210383,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":69.03326623646234,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":69.03326623646234,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":66.08944601174323,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.07071941998294,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":48.39167862389178,"y":-31.325068715171543,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68,"y":-31.325068715171543,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":66.80170501646447,"y":28.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":49.10393762861298,"y":28.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.76425183294384,"y":30.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":48,"y":30.72980352054371,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":69.03326623646234,"y":32.184611882540395,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.33333333333334,"y":-8.666666666666668,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":-8.666666666666668,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":5.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.33333333333334,"y":5.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":100,"y":7.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":68.33333333333334,"y":7.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":98.66666666666666,"y":-10.166666666666668,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":98.66666666666666,"y":8.333333333333332,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":67.66666666666666,"y":-31.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":-31.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":-17.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":-17.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":99.66666666666666,"y":-15.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":-15.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":98.66666666666666,"y":-32.833333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":98.66666666666666,"y":-14.333333333333336,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":67.66666666666666,"y":14.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":14.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":97.66666666666666,"y":28.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":28.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":99.66666666666666,"y":30.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":67.66666666666666,"y":30.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":98.66666666666666,"y":13.166666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":98.66666666666666,"y":31.666666666666664,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c","curve":0},{"x":-98.29371463453515,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-98.29371463453515,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":29.39647018721039,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.63340043020435,"y":-32.32506871517154,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.63340043020435,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-81.5772206549234,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.59594724668375,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-99.27498804277491,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.66666666666663,"y":-31.325068715171536,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80.86496165020219,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-98.5627290380537,"y":28.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.90241483372279,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-99.74400244629336,"y":30.72980352054372,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-78.63340043020435,"y":32.1846118825404,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.33333333333331,"y":-8.66666666666666,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49.333333333333314,"y":-8.66666666666666,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49.333333333333314,"y":5.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.33333333333331,"y":5.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-47.333333333333314,"y":7.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-79.33333333333331,"y":7.333333333333339,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-48.333333333333314,"y":-10.16666666666666,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-48.333333333333314,"y":8.33333333333334,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":-31.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-50,"y":-31.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-50,"y":-17.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":-17.33333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-48,"y":-15.333333333333329,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":-15.333333333333329,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49,"y":-32.83333333333333,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-49,"y":-14.333333333333329,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":28.66666666666667,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":-80,"y":30.66666666666667,"bCoef":0.1,"cMask":["wall"],"color":"d3a23c"},{"x":1246.3333333333335,"y":-124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":1251.3333333333335,"y":-128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":1246.3333333333335,"y":124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":1251.3333333333335,"y":128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":-1251.3333333333335,"y":-128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":-1251.3333333333335,"y":128.33333333333331,"bCoef":0.8,"cMask":["ball"]},{"x":-1246.3333333333335,"y":-124.66666666666666,"bCoef":0.8,"cMask":["ball"]},{"x":-1246.3333333333335,"y":124.66666666666666,"bCoef":0.8,"cMask":["ball"]}],"segments":[{"v0":0,"v1":1,"curve":0,"color":"db9b30","trait":"goalNet","bias":12,"y":-120},{"v0":2,"v1":3,"curve":0,"color":"db9b30","trait":"goalNet","bias":12,"y":120},{"v0":4,"v1":5,"curve":0,"color":"db9b30","trait":"goalNet","bias":-12,"y":-120,"pos":[1200,-120]},{"v0":6,"v1":7,"curve":0,"color":"db9b30","trait":"goalNet","bias":-12,"y":120,"pos":[1200,120]},{"v0":13,"v1":12,"curve":-90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":15,"v1":14,"curve":90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":17,"v1":16,"curve":-90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":19,"v1":18,"curve":90,"vis":true,"color":"a3a3a3","bCoef":0.1,"trait":"line"},{"v0":2,"v1":1,"curve":0,"vis":true,"color":"db9b30","bCoef":0,"cMask":["ball"],"trait":"goalNet","bias":-12,"x":-1240},{"v0":6,"v1":5,"curve":0,"vis":true,"color":"db9b30","bCoef":0,"trait":"goalNet","bias":12,"x":1240},{"v0":10,"v1":20,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12},{"v0":11,"v1":21,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":12},{"v0":8,"v1":22,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":12},{"v0":9,"v1":23,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12},{"v0":24,"v1":25,"curve":0,"vis":true,"color":"cc983f","bCoef":0,"trait":"kickOffBarrier","x":0,"_data":{"mirror":{},"arc":{"a":[0,180],"b":[0,600],"curve":0}}},{"v0":26,"v1":27,"curve":0,"vis":true,"color":"cc983f","bCoef":0,"trait":"kickOffBarrier","x":0,"_data":{"mirror":{},"arc":{"a":[0,-180],"b":[0,-600],"curve":0}}},{"v0":28,"v1":29,"curve":-180,"vis":true,"color":"cc983f","cGroup":["blueKO"],"trait":"kickOffBarrier","radius":3,"_data":{"mirror":{},"arc":{"a":[0,-180],"b":[0,180],"curve":-180,"radius":180,"center":[0,0],"from":1.5707963267948966,"to":-1.5707963267948966}}},{"v0":30,"v1":31,"curve":180,"vis":true,"color":"cc983f","cGroup":["redKO"],"trait":"kickOffBarrier","radius":3,"_data":{"mirror":{},"arc":{"a":[0,-180],"b":[0,180],"curve":180,"radius":180,"center":[0,0],"from":-1.5707963267948966,"to":1.5707963267948966}}},{"v0":32,"v1":33,"curve":0,"vis":false,"color":"b3b6b6","bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","x":0},{"v0":34,"v1":35,"curve":0,"vis":false,"color":"b3b6b6","bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier","x":0},{"v0":10,"v1":8,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"trait":"ballArea","bias":12},{"v0":11,"v1":9,"curve":0,"vis":true,"color":"a3a3a3","bCoef":1,"cMask":["ball"],"trait":"ballArea","bias":-12},{"v0":36,"v1":37,"curve":0,"vis":true,"color":"515151","bCoef":1,"cMask":["c0"],"cGroup":["c0"],"bias":0},{"v0":38,"v1":39,"curve":0,"vis":true,"color":"515151","bCoef":1,"cMask":["c0"],"cGroup":["c0"],"bias":0},{"v0":42,"v1":44,"curve":0,"color":"db9b30","cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":43,"v1":45,"curve":0,"color":"db9b30","cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":47,"v1":41,"curve":0,"vis":true,"color":"db9b30","bCoef":0.5,"cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":46,"v1":40,"curve":0,"vis":true,"color":"db9b30","cMask":["ball"],"cGroup":["wall"],"bias":0},{"v0":48,"v1":49,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":50,"v1":51,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":53,"v1":52,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":54,"v1":55,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":56,"v1":57,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":-1240},{"v0":58,"v1":59,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":60,"v1":61,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":63,"v1":62,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":64,"v1":65,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":66,"v1":67,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0,"x":1240},{"v0":68,"v1":69,"curve":0,"vis":true,"color":"5689e5","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":1200},{"v0":70,"v1":71,"curve":0,"vis":true,"color":"E74C3C","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":-1200},{"v0":72,"v1":73,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":-1202},{"v0":74,"v1":75,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":-1198},{"v0":76,"v1":77,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":1198},{"v0":78,"v1":79,"curve":0,"vis":true,"color":"404040","bCoef":0.5,"cMask":["c0"],"cGroup":["c0"],"bias":0,"x":1202},{"v0":81,"v1":80,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-725},{"v0":82,"v1":83,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":725},{"v0":85,"v1":84,"curve":90,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-725},{"v0":87,"v1":86,"curve":-90,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":725},{"v0":89,"v1":88,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-1000},{"v0":91,"v1":90,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":999},{"v0":93,"v1":92,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":630,"y":-180},{"v0":95,"v1":94,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":630,"y":180},{"v0":97,"v1":96,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-698,"y":-180},{"v0":99,"v1":98,"color":"595959","cMask":["c0"],"cGroup":["c0"],"trait":"nc","x":-698,"y":180},{"v0":102,"v1":103,"color":"595959","cMask":["c0"],"cGroup":["c0"]},{"v0":104,"v1":105,"color":"595959","cMask":["c0"],"cGroup":["c0"],"y":-405},{"v0":106,"v1":107,"color":"595959","cMask":["c0"],"cGroup":["c0"],"y":-405},{"v0":108,"v1":109,"color":"595959","cMask":["c0"],"cGroup":["c0"]},{"v0":110,"v1":111,"curve":0,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":-845},{"v0":111,"v1":110,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":-845},{"v0":110,"v1":111,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":-845},{"v0":112,"v1":113,"curve":0,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":845},{"v0":113,"v1":112,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":845},{"v0":112,"v1":113,"curve":180,"color":"595959","cMask":["c0"],"cGroup":["c0"],"x":845},{"v0":114,"v1":115,"curve":186.38082131014062,"vis":false,"color":"db9b30","trait":"line","radius":3},{"v0":115,"v1":114,"curve":179.0180912216902,"vis":false,"color":"db9b30","trait":"line","radius":3},{"v0":121,"v1":122,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":125,"v1":126,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":15},{"v0":116,"v1":119,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-40},{"v0":128,"v1":129,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":130,"v1":131,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-7.613020714773503},{"v0":132,"v1":133,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":-5.815388117459595},{"v0":134,"v1":117,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":135,"v1":136,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":137,"v1":138,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":139,"v1":140,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":141,"v1":120,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-39.67220578192579},{"v0":143,"v1":142,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-27.648531755064877},{"v0":144,"v1":145,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":34.063136853877054},{"v0":146,"v1":147,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":148,"v1":149,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":12.220122922831779},{"v0":150,"v1":151,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":152,"v1":153,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":34.063136853877054},{"v0":154,"v1":155,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":156,"v1":158,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-40},{"v0":161,"v1":162,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":164,"v1":157,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":165,"v1":166,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":167,"v1":168,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":169,"v1":170,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":34.063136853877054},{"v0":172,"v1":173,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":173,"v1":174,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":97.66666666666666},{"v0":174,"v1":175,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":176,"v1":177,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":178,"v1":179,"curve":0,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":98.66666666666666},{"v0":180,"v1":181,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":181,"v1":182,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":182,"v1":183,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":184,"v1":185,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":186,"v1":187,"curve":0,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-180},{"v0":188,"v1":189,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":189,"v1":190,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":190,"v1":191,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":192,"v1":193,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":194,"v1":195,"curve":0,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-179},{"v0":196,"v1":198,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-40},{"v0":201,"v1":202,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-37.67220578192579},{"v0":204,"v1":197,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":205,"v1":206,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":207,"v1":208,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":209,"v1":210,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":30.72980352054372},{"v0":212,"v1":213,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":213,"v1":214,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":214,"v1":215,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":216,"v1":217,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":218,"v1":219,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-179},{"v0":220,"v1":221,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":5},{"v0":221,"v1":222,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":222,"v1":223,"color":"d3a23c","bCoef":0.1,"cMask":["wall"]},{"v0":224,"v1":225,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"y":25},{"v0":226,"v1":227,"color":"d3a23c","bCoef":0.1,"cMask":["wall"],"x":-180},{"v0":230,"v1":231,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":232,"v1":233,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":235,"v1":237,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0},{"v0":234,"v1":236,"curve":0,"color":"b5091a","bCoef":0.8,"cMask":["ball"],"bias":0}],"goals":[{"p0":[-1208,-120],"p1":[-1208,120],"team":"red"},{"p0":[1208,-120],"p1":[1208,120],"team":"blue"}],"discs":[{"radius":6.4,"invMass":1.535,"pos":[-1,-1],"color":"2EC4B6","bCoef":0.41975,"cGroup":["ball","kick","score"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":6.4,"pos":[1200,120],"color":"db9b30","bCoef":1,"trait":"goalPost","y":120},{"radius":6.4,"pos":[1200,-120],"color":"db9b30","bCoef":1,"trait":"goalPost","y":-120},{"radius":6.4,"pos":[-1200,120],"color":"db9b30","bCoef":1,"trait":"goalPost"},{"radius":6.4,"pos":[-1200,-120],"color":"db9b30","bCoef":1,"trait":"goalPost"},{"radius":3,"invMass":0,"pos":[1260,135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0],"x":1260,"y":135},{"radius":3,"invMass":0,"pos":[1260,-135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0],"x":1260,"y":-135},{"radius":3,"invMass":0,"pos":[-1260,135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0]},{"radius":3,"invMass":0,"pos":[-1260,-135],"color":"db9b30","bCoef":0.5,"cMask":["all"],"cGroup":["all"],"damping":0.99,"speed":[0,0],"gravity":[0,0],"y":-135,"x":-1260}],"planes":[{"normal":[0,-1],"dist":-600,"bCoef":1,"trait":"ballArea","curve":0,"_data":{"extremes":{"normal":[0,-1],"dist":-600,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,600],"b":[1275,600]}}},{"normal":[0,1],"dist":-600,"bCoef":1,"trait":"ballArea","vis":false,"curve":0,"_data":{"extremes":{"normal":[0,1],"dist":-600,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,-600],"b":[1275,-600]}}},{"normal":[1,0],"dist":-1275,"bCoef":0.1,"_data":{"extremes":{"normal":[1,0],"dist":-1275,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,-630],"b":[-1275,630]}}},{"normal":[0,1],"dist":-630,"bCoef":0.1,"_data":{"extremes":{"normal":[0,1],"dist":-630,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,-630],"b":[1275,-630]}}},{"normal":[0,-1],"dist":-630,"bCoef":0.1,"_data":{"extremes":{"normal":[0,-1],"dist":-630,"canvas_rect":[-1275,-630,1275,630],"a":[-1275,630],"b":[1275,630]}}},{"normal":[-1,0],"dist":-1275,"bCoef":0.1,"_data":{"extremes":{"normal":[-1,0],"dist":-1275,"canvas_rect":[-1275,-630,1275,630],"a":[1275,-630],"b":[1275,630]}}},{"normal":[1,0],"dist":-1250,"bCoef":0.1,"trait":"ballArea","_data":{"extremes":{"normal":[1,0],"dist":-1250,"canvas_rect":[-1275,-630,1275,630],"a":[-1250,-630],"b":[-1250,630]}}},{"normal":[-1,0],"dist":-1250,"bCoef":0.1,"trait":"ballArea","_data":{"extremes":{"normal":[-1,0],"dist":-1250,"canvas_rect":[-1275,-630,1275,630],"a":[1250,-630],"b":[1250,630]}}}],"traits":{"ballArea":{"vis":false,"bCoef":1,"cMask":["ball"]},"goalPost":{"radius":8,"invMass":0,"bCoef":0.5},"goalNet":{"vis":true,"bCoef":0.1,"cMask":["ball"]},"line":{"vis":true,"bCoef":0.1,"cMask":[""]},"kickOffBarrier":{"vis":false,"bCoef":0.1,"cGroup":["redKO","blueKO"],"cMask":["red","blue"]}},"playerPhysics":{"bCoef":0,"invMass":0.5,"damping":0.96,"acceleration":0.11,"kickingAcceleration":0.083,"kickingDamping":0.96,"kickStrength":5.45,"cGroup":["red","blue"],"gravity":[0,0],"radius":15,"kickback":0},"ballPhysics":"disc0","joints":[],"canBeStored":false}`;

room.setScoreLimit(scoreLimit);
room.setTimeLimit(timeLimit);
room.setTeamsLock(true);
room.setKickRateLimit(6, 0, 0);

var masterPassword = '10880';
var roomPassword = '';

/* OPTIONS */

var drawTimeLimit = Infinity;
var maxAdmins = 2;
var disableBans = false;
var maxInactivity = 12;
var debugMode = false;

var hideClaimMessage = true;
var mentionPlayersUnpause = true;

/* OBJECTS */

class Goal {
    constructor(time, team, striker, assist) {
        this.time = time;
        this.team = team;
        this.striker = striker;
        this.assist = assist;
    }
}

class Game {
    constructor() {
        this.date = Date.now();
        this.scores = room.getScores();
        this.playerComp = getStartingLineups();
        this.goals = [];
        this.rec = room.startRecording();
        this.touchArray = [];
    }
}

class PlayerComposition {
    constructor(player, auth, timeEntry, timeExit) {
        this.player = player;
        this.auth = auth;
        this.timeEntry = timeEntry;
        this.timeExit = timeExit;
        this.inactivityTicks = 0;
        this.GKTicks = 0;
    }
}

class BallTouch {
    constructor(player, time, goal, position) {
        this.player = player;
        this.time = time;
        this.goal = goal;
        this.position = position;
    }
}

/* PLAYERS */

const Team = { SPECTATORS: 0, RED: 1, BLUE: 2 };
const State = { PLAY: 0, PAUSE: 1, STOP: 2 };
const Role = { PLAYER: 0, ADMIN_TEMP: 1, ADMIN_PERM: 2, MASTER: 3 };
const HaxNotification = { NONE: 0, CHAT: 1, MENTION: 2 };
const Situation = { STOP: 0, KICKOFF: 1, PLAY: 2, GOAL: 3 };

var gameState = State.STOP;
var playSituation = Situation.STOP;
var goldenGoal = false;

var players = [];
var teamRed = [];
var teamBlue = [];
var teamSpec = [];

var banList = [];

/* STATS */

var possession = [0, 0];
var actionZoneHalf = [0, 0];

/* AUTH */

var authArray = [];
var adminList = [
    // ['INSERT_AUTH_HERE_1', 'NICK_OF_ADMIN_1'],
    // ['INSERT_AUTH_HERE_2', 'NICK_OF_ADMIN_2'],
];
var masterList = [
    // 'INSERT_MASTER_AUTH_HERE',
    // 'INSERT_MASTER_AUTH_HERE_2'
];

/* COMMANDS */

var commands = {
    help: {
        aliases: ['commands'],
        roles: Role.PLAYER,
        desc: `
	This command shows all the available commands. It also can show the description of a command in particular.
Example: \'!help bb\' will show the description of the \'bb\' command.`,
        function: helpCommand,
    },
    claim: {
        aliases: [],
        roles: Role.PLAYER,
        desc: false,
        function: masterCommand,
    },
    bb: {
        aliases: ['bye', 'gn', 'cya'],
        roles: Role.PLAYER,
        desc: `
	This command makes you leave instantly (use recommended).`,
        function: leaveCommand,
    },
    rr: {
        aliases: [],
        roles: Role.ADMIN_TEMP,
        desc: `
    This command restarts the game.`,
        function: restartCommand,
    },
    rrs: {
        aliases: [],
        roles: Role.ADMIN_TEMP,
        desc: `
    This command swaps the teams and restarts the game.`,
        function: restartSwapCommand,
    },
    swap: {
        aliases: ['s'],
        roles: Role.ADMIN_TEMP,
        desc: `
    This command swaps the teams when the game is stopped.`,
        function: swapCommand,
    },
    training: {
        aliases: [],
        roles: Role.ADMIN_TEMP,
        desc: `
        This command loads the classic training stadium.`,
        function: stadiumCommand,
    },
    big: {
        aliases: [],
        roles: Role.ADMIN_TEMP,
        desc: `
        This command loads the big stadium.`,
        function: stadiumCommand,
    },
    kickred: {
        aliases: ['kickr'],
        roles: Role.ADMIN_TEMP,
        desc: `
    This command kicks all the players from the red team, including the player that entered the command. You can give as an argument the reason of the kick.`,
        function: kickTeamCommand,
    },
    kickblue: {
        aliases: ['kickb'],
        roles: Role.ADMIN_TEMP,
        desc: `
    This command kicks all the players from the blue team, including the player that entered the command. You can give as an argument the reason of the kick.`,
        function: kickTeamCommand,
    },
    kickspec: {
        aliases: ['kicks'],
        roles: Role.ADMIN_TEMP,
        desc: `
    This command kicks all the players from the spectators team, including the player that entered the command. You can give as an argument the reason of the kick.`,
        function: kickTeamCommand,
    },
    clearbans: {
        aliases: [],
        roles: Role.MASTER,
        desc: `
	This command unbans everyone. It also can unban one player in particular, by adding his ID as an argument.`,
        function: clearbansCommand,
    },
    bans: {
        aliases: ['banlist'],
        roles: Role.MASTER,
        desc: `
    This command shows all the players that were banned and their IDs.`,
        function: banListCommand,
    },
    admins: {
        aliases: ['adminlist'],
        roles: Role.MASTER,
        desc: `
    This command shows all the players that are permanent admins.`,
        function: adminListCommand,
    },
    setadmin: {
        aliases: ['admin'],
        roles: Role.MASTER,
        desc: `
    This command allows to set someone as admin. He will be able to connect as admin, and can be removed at any time by masters.
It takes 1 argument:
Argument 1: #<id> where <id> is the id of the player targeted.
Example: !setadmin #3 will give admin to the player with id 3.`,
        function: setAdminCommand,
    },
    removeadmin: {
        aliases: ['unadmin'],
        roles: Role.MASTER,
        desc: `
	This command allows to remove someone as admin.
It takes 1 argument:
Argument 1: #<id> where <id> is the id of the player targeted.
OR
Argument 1: <number> where <number> is the number associated with the admin given by the 'adminList' command.
Example: !removeadmin #300 will remove admin to the player with id 300,
         !removeadmin 2 will remove the admin n¬∞2 according to the 'adminList' command.`,
        function: removeAdminCommand,
    },
    password: {
        aliases: ['pw'],
        roles: Role.MASTER,
        desc: `
        This command allows to add a password to the room.
    It takes 1 argument:
    Argument 1: <password> where <password> is the password you want for the room.
    
    To remove the room password, simply enter '!password'.`,
        function: passwordCommand,
    },
};

/* GAME */

var lastTouches = Array(2).fill(null);
var lastTeamTouched;

var speedCoefficient = 100 / (5 * (0.99 ** 60 + 1));
var ballSpeed = 0;
var playerRadius = 15;
var ballRadius = 10;
var triggerDistance = playerRadius + ballRadius + 0.01;

/* COLORS */

var welcomeColor = 0x9ad143;
var announcementColor = 0xffefd6;
var infoColor = 0xbebebe;
var privateMessageColor = 0xffc933;
var redColor = 0xff4c4c;
var blueColor = 0x62cbff;
var warningColor = 0xffa135;
var errorColor = 0xa40000;
var successColor = 0x75ff75;
var defaultColor = null;

/* AUXILIARY */

var checkTimeVariable = false;
var checkStadiumVariable = true;
var endGameVariable = false;
var cancelGameVariable = false;
var kickFetchVariable = false;

var stopTimeout;
var startTimeout;
var unpauseTimeout;

var emptyPlayer = {
    id: 0,
};
stadiumCommand(emptyPlayer, "!big");

var game = new Game();

/* FUNCTIONS */

/* AUXILIARY FUNCTIONS */

if (typeof String.prototype.replaceAll != 'function') {
    String.prototype.replaceAll = function (search, replacement) {
        var target = this;
        return target.split(search).join(replacement);
    };
}

function getDate() {
    let d = new Date();
    return d.toLocaleDateString() + ' ' + d.toLocaleTimeString();
}

/* MATH FUNCTIONS */

function getRandomInt(max) {
    // returns a random number between 0 and max-1
    return Math.floor(Math.random() * Math.floor(max));
}

function pointDistance(p1, p2) {
    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
}

/* TIME FUNCTIONS */

function getMinutesGame(time) {
    var t = Math.floor(time / 60);
    return `${Math.floor(t / 10)}${Math.floor(t % 10)}`;
}

function getMinutesReport(time) {
    return Math.floor(Math.round(time) / 60);
}

function getMinutesEmbed(time) {
    var t = Math.floor(Math.round(time) / 60);
    return `${Math.floor(t / 10)}${Math.floor(t % 10)}`;
}

function getSecondsGame(time) {
    var t = Math.floor(time - Math.floor(time / 60) * 60);
    return `${Math.floor(t / 10)}${Math.floor(t % 10)}`;
}

function getSecondsReport(time) {
    var t = Math.round(time);
    return Math.floor(t - Math.floor(t / 60) * 60);
}

function getSecondsEmbed(time) {
    var t = Math.round(time);
    var t2 = Math.floor(t - Math.floor(t / 60) * 60);
    return `${Math.floor(t2 / 10)}${Math.floor(t2 % 10)}`;
}

function getTimeGame(time) {
    return `[${getMinutesGame(time)}:${getSecondsGame(time)}]`;
}

function getTimeEmbed(time) {
    return `[${getMinutesEmbed(time)}:${getSecondsEmbed(time)}]`;
}

function getGoalGame() {
    return game.scores.red + game.scores.blue;
}

/* REPORT FUNCTIONS */

function findFirstNumberCharString(str) {
    let str_number = str[str.search(/[0-9]/g)];
    return str_number === undefined ? "0" : str_number;
}

function getIdReport() {
    var d = new Date();
    return `${d.getFullYear() % 100}${d.getMonth() < 9 ? '0' : ''}${d.getMonth() + 1}${d.getDate() < 10 ? '0' : ''}${d.getDate()}${d.getHours() < 10 ? '0' : ''}${d.getHours()}${d.getMinutes() < 10 ? '0' : ''}${d.getMinutes()}${d.getSeconds() < 10 ? '0' : ''}${d.getSeconds()}${findFirstNumberCharString(roomName)}`;
}

function getRecordingName(game) {
    let d = new Date();
    let redCap = game.playerComp[0][0] != undefined ? game.playerComp[0][0].player.name : 'Red';
    let blueCap = game.playerComp[1][0] != undefined ? game.playerComp[1][0].player.name : 'Blue';
    let day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();
    let month = d.getMonth() < 10 ? '0' + (d.getMonth() + 1) : (d.getMonth() + 1);
    let year = d.getFullYear() % 100 < 10 ? '0' + (d.getFullYear() % 100) : (d.getFullYear() % 100);
    let hour = d.getHours() < 10 ? '0' + d.getHours() : d.getHours();
    let minute = d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes();
    return `${day}-${month}-${year}-${hour}h${minute}-${redCap}vs${blueCap}.hbr2`;
}

function fetchRecording(game) {
    if (gameWebhook != "") {
        let form = new FormData();
        form.append(null, new File([game.rec], getRecordingName(game), { "type": "text/plain" }));
        form.append("payload_json", JSON.stringify({
            "username": roomName
        }));

        fetch(gameWebhook, {
            method: 'POST',
            body: form,
        }).then((res) => res);
    }
}

/* FEATURE FUNCTIONS */

function getCommand(commandStr) {
    if (commands.hasOwnProperty(commandStr)) return commandStr;
    for (const [key, value] of Object.entries(commands)) {
        for (let alias of value.aliases) {
            if (alias == commandStr) return key;
        }
    }
    return false;
}

function getPlayerComp(player) {
    if (player == null || player.id == 0) return null;
    var comp = game.playerComp;
    var index = comp[0].findIndex((c) => c.auth == authArray[player.id][0]);
    if (index != -1) return comp[0][index];
    index = comp[1].findIndex((c) => c.auth == authArray[player.id][0]);
    if (index != -1) return comp[1][index];
    return null;
}

function getTeamArray(team) {
    return team == Team.RED ? teamRed : team == Team.BLUE ? teamBlue : teamSpec;
}

function sendAnnouncementTeam(message, team, color, style, mention) {
    for (let player of team) {
        room.sendAnnouncement(message, player.id, color, style, mention);
    }
}

function teamChat(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    var emoji = player.team == Team.RED ? '‚ù§' : player.team == Team.BLUE ? '‚ù§' : '‚ö™';
    var message = `${emoji} [TEAM] ${player.name}: ${msgArray.join(' ')}`;
    var team = getTeamArray(player.team);
    var color = player.team == Team.RED ? redColor : player.team == Team.BLUE ? blueColor : null;
    var style = 'bold';
    var mention = HaxNotification.CHAT;
    sendAnnouncementTeam(message, team, color, style, mention);
}

function playerChat(player, message) {
    var msgArray = message.split(/ +/);
    var playerTargetIndex = players.findIndex(
        (p) => p.name.replaceAll(' ', '_') == msgArray[0].substring(2)
    );
    if (playerTargetIndex == -1) {
        room.sendAnnouncement(
            `Invalid player, make sure the name you entered is correct.`,
            player.id,
            errorColor,
            'bold',
            null
        );
        return false;
    }
    var playerTarget = players[playerTargetIndex];
    if (player.id == playerTarget.id) {
        room.sendAnnouncement(
            `No te puedes hablar a ti mismo!`,
            player.id,
            errorColor,
            'bold',
            null
        );
        return false;
    }
    var messageFrom = `üìù [PM with ${playerTarget.name}] ${player.name}: ${msgArray.slice(1).join(' ')}`

    var messageTo = `üìù [PM with ${player.name}] ${player.name}: ${msgArray.slice(1).join(' ')}`

    room.sendAnnouncement(
        messageFrom,
        player.id,
        privateMessageColor,
        'bold',
        HaxNotification.CHAT
    );
    room.sendAnnouncement(
        messageTo,
        playerTarget.id,
        privateMessageColor,
        'bold',
        HaxNotification.CHAT
    );
}

/* PHYSICS FUNCTIONS */

function calculateStadiumVariables() {
    if (checkStadiumVariable && teamRed.length + teamBlue.length > 0) {
        checkStadiumVariable = false;
        setTimeout(() => {
            let ballDisc = room.getDiscProperties(0);
            let playerDisc = room.getPlayerDiscProperties(teamRed.concat(teamBlue)[0].id);
            ballRadius = ballDisc.radius;
            playerRadius = playerDisc.radius;
            triggerDistance = ballRadius + playerRadius + 0.01;
            speedCoefficient = 100 / (5 * ballDisc.invMass * (ballDisc.damping ** 60 + 1));
        }, 1);
    }
}

function checkGoalKickTouch(array, index, goal) {
    if (array != null && array.length >= index + 1) {
        var obj = array[index];
        if (obj != null && obj.goal != null && obj.goal == goal) return obj;
    }
    return null;
}

/* BUTTONS */

function swapButton() {
    for (let player of teamBlue) {
        room.setPlayerTeam(player.id, Team.RED);
    }
    for (let player of teamRed) {
        room.setPlayerTeam(player.id, Team.BLUE);
    }
}

/* COMMAND FUNCTIONS */

/* PLAYER COMMANDS */

function leaveCommand(player, message) {
    room.kickPlayer(player.id, 'Bye !', false);
}

function helpCommand(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    if (msgArray.length == 0) {
        var commandString = 'Player commands :';
        for (const [key, value] of Object.entries(commands)) {
            if (value.desc && value.roles == Role.PLAYER) commandString += ` !${key},`;
        }
        commandString = commandString.substring(0, commandString.length - 1) + '.\n';
        if (getRole(player) >= Role.ADMIN_TEMP) {
            commandString += `Admin commands :`;
            for (const [key, value] of Object.entries(commands)) {
                if (value.desc && value.roles == Role.ADMIN_TEMP) commandString += ` !${key},`;
            }
            if (commandString.slice(commandString.length - 1) == ':')
                commandString += ` None,`;
            commandString = commandString.substring(0, commandString.length - 1) + '.\n';
        }
        if (getRole(player) >= Role.MASTER) {
            commandString += `Master commands :`;
            for (const [key, value] of Object.entries(commands)) {
                if (value.desc && value.roles == Role.MASTER) commandString += ` !${key},`;
            }
            if (commandString.slice(commandString.length - 1) == ':') commandString += ` None,`;
            commandString = commandString.substring(0, commandString.length - 1) + '.\n';
        }
        commandString += "\nTo get information on a specific command, type ''!help <command name>'.";
        room.sendAnnouncement(
            commandString,
            player.id,
            infoColor,
            'bold',
            HaxNotification.CHAT
        );
    } else if (msgArray.length >= 1) {
        var commandName = getCommand(msgArray[0].toLowerCase());
        if (commandName != false && commands[commandName].desc != false)
            room.sendAnnouncement(
                `\'${commandName}\' command :\n${commands[commandName].desc}`,
                player.id,
                infoColor,
                'bold',
                HaxNotification.CHAT
            );
        else
            room.sendAnnouncement(
                `The command you tried to get information on does not exist. To check all available commands, type \'!help\'`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
    }
}

function masterCommand(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    if (parseInt(msgArray[0]) == masterPassword) {
        if (!masterList.includes(authArray[player.id][0])) {
            room.setPlayerAdmin(player.id, true);
            adminList = adminList.filter((a) => a[0] != authArray[player.id][0]);
            masterList.push(authArray[player.id][0]);
            room.sendAnnouncement(
                `${player.name} ahora es admin principal !`,
                null,
                announcementColor,
                'bold',
                HaxNotification.CHAT
            );
        } else {
            room.sendAnnouncement(
                `You are a master already !`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    }
}

/* ADMIN COMMANDS */

function restartCommand(player, message) {
    instantRestart();
}

function restartSwapCommand(player, message) {
    room.stopGame();
    swapButton();
    startTimeout = setTimeout(() => {
        room.startGame();
    }, 10);
}

function swapCommand(player, message) {
    if (playSituation == Situation.STOP) {
        swapButton();
        room.sendAnnouncement(
            '‚úîÔ∏è Teams swapped !',
            null,
            announcementColor,
            'bold',
            null
        );
    } else {
        room.sendAnnouncement(
            `Please stop the game before swapping.`,
            player.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
    }
}

function kickTeamCommand(player, message) {
    var msgArray = message.split(/ +/);
    var reasonString = `Team kick by ${player.name}`;
    if (msgArray.length > 1) {
        reasonString = msgArray.slice(1).join(' ');
    }
    if (['!kickred', '!kickr'].includes(msgArray[0].toLowerCase())) {
        for (let i = 0; i < teamRed.length; i++) {
            setTimeout(() => {
                room.kickPlayer(teamRed[0].id, reasonString, false);
            }, i * 20)
        }
    } else if (['!kickblue', '!kickb'].includes(msgArray[0].toLowerCase())) {
        for (let i = 0; i < teamBlue.length; i++) {
            setTimeout(() => {
                room.kickPlayer(teamBlue[0].id, reasonString, false);
            }, i * 20)
        }
    } else if (['!kickspec', '!kicks'].includes(msgArray[0].toLowerCase())) {
        for (let i = 0; i < teamSpec.length; i++) {
            setTimeout(() => {
                room.kickPlayer(teamSpec[0].id, reasonString, false);
            }, i * 20)
        }
    }
}

function stadiumCommand(player, message) {
    var msgArray = message.split(/ +/);
    if (gameState == State.STOP) {
        if (['!8321'].includes(msgArray[0].toLowerCase())) {
            if (JSON.parse(classicMap).name == 'Classic') {
                room.setDefaultStadium('Classic');
            } else {
                room.setCustomStadium(classicMap);
            }
        } else if (['!big'].includes(msgArray[0].toLowerCase())) {
            if (JSON.parse(bigMap).name == 'Big') {
                room.setDefaultStadium('Big');
            } else {
                room.setCustomStadium(bigMap);
            }
        } else if (['!training'].includes(msgArray[0].toLowerCase())) {
            room.setCustomStadium(trainingMap);
        } else {
            room.sendAnnouncement(
                `Stadium not recognized.`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    } else {
        room.sendAnnouncement(
            `Please stop the game before using this command.`,
            player.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
    }
}

/* MASTER COMMANDS */

function clearbansCommand(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    if (msgArray.length == 0) {
        room.clearBans();
        room.sendAnnouncement(
            '‚úîÔ∏è Bans limpiados !',
            null,
            announcementColor,
            'bold',
            null
        );
        banList = [];
    } else if (msgArray.length == 1) {
        if (parseInt(msgArray[0]) > 0) {
            var ID = parseInt(msgArray[0]);
            room.clearBan(ID);
            if (banList.length != banList.filter((p) => p[1] != ID).length) {
                room.sendAnnouncement(
                    `‚úîÔ∏è ${banList.filter((p) => p[1] == ID)[0][0]} has sido desbaneado de la sala !`,
                    null,
                    announcementColor,
                    'bold',
                    null
                );
            } else {
                room.sendAnnouncement(
                    `The ID you entered doesn't have a ban associated to. Enter "!help clearbans" for more information.`,
                    player.id,
                    errorColor,
                    'bold',
                    HaxNotification.CHAT
                );
            }
            banList = banList.filter((p) => p[1] != ID);
        } else {
            room.sendAnnouncement(
                `Invalid ID entered. Enter "!help clearbans" for more information.`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    } else {
        room.sendAnnouncement(
            `Wrong number of arguments. Enter "!help clearbans" for more information.`,
            player.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
    }
}

function banListCommand(player, message) {
    if (banList.length == 0) {
        room.sendAnnouncement(
            "üì¢ No hay nadie baneado",
            player.id,
            announcementColor,
            'bold',
            null
        );
        return false;
    }
    var cstm = 'üì¢ Ban list : ';
    for (let ban of banList) {
        cstm += ban[0] + `[${ban[1]}], `;
    }
    cstm = cstm.substring(0, cstm.length - 2) + '.';
    room.sendAnnouncement(
        cstm,
        player.id,
        announcementColor,
        'bold',
        null
    );
}

function adminListCommand(player, message) {
    if (adminList.length == 0) {
        room.sendAnnouncement(
            "üì¢ Nadie es administrador",
            player.id,
            announcementColor,
            'bold',
            null
        );
        return false;
    }
    var cstm = 'üì¢ Admin list : ';
    for (let i = 0; i < adminList.length; i++) {
        cstm += adminList[i][1] + `[${i}], `;
    }
    cstm = cstm.substring(0, cstm.length - 2) + '.';
    room.sendAnnouncement(
        cstm,
        player.id,
        announcementColor,
        'bold',
        null
    );
}

function setAdminCommand(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    if (msgArray.length > 0) {
        if (msgArray[0].length > 0 && msgArray[0][0] == '#') {
            msgArray[0] = msgArray[0].substring(1, msgArray[0].length);
            if (room.getPlayer(parseInt(msgArray[0])) != null) {
                var playerAdmin = room.getPlayer(parseInt(msgArray[0]));

                if (!adminList.map((a) => a[0]).includes(authArray[playerAdmin.id][0])) {
                    if (!masterList.includes(authArray[playerAdmin.id][0])) {
                        room.setPlayerAdmin(playerAdmin.id, true);
                        adminList.push([authArray[playerAdmin.id][0], playerAdmin.name]);
                        room.sendAnnouncement(
                            `${playerAdmin.name} is now a room admin !`,
                            null,
                            announcementColor,
                            'bold',
                            HaxNotification.CHAT
                        );
                    } else {
                        room.sendAnnouncement(
                            `This player is a master already !`,
                            player.id,
                            errorColor,
                            'bold',
                            HaxNotification.CHAT
                        );
                    }
                } else {
                    room.sendAnnouncement(
                        `This player is a permanent admin already !`,
                        player.id,
                        errorColor,
                        'bold',
                        HaxNotification.CHAT
                    );
                }
            } else {
                room.sendAnnouncement(
                    `There is no player with such ID in the room. Enter "!help setadmin" for more information.`,
                    player.id,
                    errorColor,
                    'bold',
                    HaxNotification.CHAT
                );
            }
        } else {
            room.sendAnnouncement(
                `Incorrect format for your argument. Enter "!help setadmin" for more information.`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    } else {
        room.sendAnnouncement(
            `Wrong number of arguments. Enter "!help setadmin" for more information.`,
            player.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
    }
}

function removeAdminCommand(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    if (msgArray.length > 0) {
        if (msgArray[0].length > 0 && msgArray[0][0] == '#') {
            msgArray[0] = msgArray[0].substring(1, msgArray[0].length);
            if (room.getPlayer(parseInt(msgArray[0])) != null) {
                var playerAdmin = room.getPlayer(parseInt(msgArray[0]));

                if (adminList.map((a) => a[0]).includes(authArray[playerAdmin.id][0])) {
                    room.setPlayerAdmin(playerAdmin.id, false);
                    adminList = adminList.filter((a) => a[0] != authArray[playerAdmin.id][0]);
                    room.sendAnnouncement(
                        `${playerAdmin.name} is not a room admin anymore !`,
                        null,
                        announcementColor,
                        'bold',
                        HaxNotification.CHAT
                    );
                } else {
                    room.sendAnnouncement(
                        `This player isn't a permanent admin !`,
                        player.id,
                        errorColor,
                        'bold',
                        HaxNotification.CHAT
                    );
                }
            } else {
                room.sendAnnouncement(
                    `There is no player with such ID in the room. Enter "!help removeadmin" for more information.`,
                    player.id,
                    errorColor,
                    'bold',
                    HaxNotification.CHAT
                );
            }
        } else if (msgArray[0].length > 0 && parseInt(msgArray[0]) < adminList.length) {
            var index = parseInt(msgArray[0]);
            var playerAdmin = adminList[index];
            if (players.findIndex((p) => authArray[p.id][0] == playerAdmin[0]) != -1) {
                // check if there is the removed admin in the room
                var indexRem = players.findIndex((p) => authArray[p.id][0] == playerAdmin[0]);
                room.setPlayerAdmin(players[indexRem].id, false);
            }
            adminList.splice(index);
            room.sendAnnouncement(
                `${playerAdmin[1]} is not a room admin anymore !`,
                null,
                announcementColor,
                'bold',
                HaxNotification.CHAT
            );
        } else {
            room.sendAnnouncement(
                `Incorrect format for your argument. Enter "!help removeadmin" for more information.`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    } else {
        room.sendAnnouncement(
            `Wrong number of arguments. Enter "!help removeadmin" for more information.`,
            player.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
    }
}

function passwordCommand(player, message) {
    var msgArray = message.split(/ +/).slice(1);
    if (msgArray.length > 0) {
        if (msgArray.length == 1 && msgArray[0] == '') {
            roomPassword = '';
            room.setPassword(null);
            room.sendAnnouncement(
                `The room password has been removed.`,
                player.id,
                announcementColor,
                'bold',
                HaxNotification.CHAT
            );
        }
        roomPassword = msgArray.join(' ');
        room.setPassword(roomPassword);
        room.sendAnnouncement(
            `The room password has been set to ${roomPassword}`,
            player.id,
            announcementColor,
            'bold',
            HaxNotification.CHAT
        );
    } else {
        if (roomPassword != '') {
            roomPassword = '';
            room.setPassword(null);
            room.sendAnnouncement(
                `The room password has been removed.`,
                player.id,
                announcementColor,
                'bold',
                HaxNotification.CHAT
            );
        } else {
            room.sendAnnouncement(
                `The room currently does not have a password. Enter "!help password" for more information.`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    }
}

/* GAME FUNCTIONS */

function checkTime() {
    const scores = room.getScores();
    if (game != undefined) game.scores = scores;
    if (Math.abs(scores.time - scores.timeLimit) <= 0.01 && scores.timeLimit != 0 && playSituation == Situation.PLAY) {
        if (scores.red != scores.blue) {
            if (!checkTimeVariable) {
                checkTimeVariable = true;
                setTimeout(() => {
                    checkTimeVariable = false;
                }, 3000);
                scores.red > scores.blue ? endGame(Team.RED) : endGame(Team.BLUE);
                stopTimeout = setTimeout(() => {
                    room.stopGame();
                }, 2000);
            }
            return;
        }
        if (drawTimeLimit != 0) {
            goldenGoal = true;
            room.sendAnnouncement(
                '‚öΩ First goal wins !',
                null,
                announcementColor,
                'bold',
                HaxNotification.CHAT
            );
        }
    }
    if (Math.abs(scores.time - drawTimeLimit * 60 - scores.timeLimit) <= 0.01 && scores.timeLimit != 0) {
        if (!checkTimeVariable) {
            checkTimeVariable = true;
            setTimeout(() => {
                checkTimeVariable = false;
            }, 10);
            endGame(Team.SPECTATORS);
            room.stopGame();
            goldenGoal = false;
        }
    }
}

function instantRestart() {
    room.stopGame();
    startTimeout = setTimeout(() => {
        room.startGame();
    }, 10);
}

function resumeGame() {
    startTimeout = setTimeout(() => {
        room.startGame();
    }, 1000);
    setTimeout(() => {
        room.pauseGame(false);
    }, 500);
}

function endGame(winner) {
    const scores = room.getScores();
    game.scores = scores;
    endGameVariable = true;
    if (winner == Team.RED) {
        room.sendAnnouncement(
            `‚ú® Red Team won ${scores.red} - ${scores.blue} !`,
            null,
            redColor,
            'bold',
            HaxNotification.CHAT
        );
    } else if (winner == Team.BLUE) {
        room.sendAnnouncement(
            `‚ú® Blue Team won ${scores.blue} - ${scores.red} !`,
            null,
            blueColor,
            'bold',
            HaxNotification.CHAT
        );
    } else {
        room.sendAnnouncement(
            'üí§ Draw limit reached !',
            null,
            announcementColor,
            'bold',
            HaxNotification.CHAT
        );
    }
    let possessionRedPct = (possession[0] / (possession[0] + possession[1])) * 100;
    let possessionBluePct = 100 - possessionRedPct;
    let possessionString = `üî¥ ${possessionRedPct.toFixed(0)}% - ${possessionBluePct.toFixed(0)}% üîµ`;
    let actionRedPct = (actionZoneHalf[0] / (actionZoneHalf[0] + actionZoneHalf[1])) * 100;
    let actionBluePct = 100 - actionRedPct;
    let actionString = `üî¥ ${actionRedPct.toFixed(0)}% - ${actionBluePct.toFixed(0)}% üîµ`;
    let CSString = getCSString(scores);
    room.sendAnnouncement(
        `üìä Possession: üî¥ ${possessionString}\n` +
        `üìä Action Zone: üî¥ ${actionString}\n` +
        `${CSString}`,
        null,
        announcementColor,
        'bold',
        HaxNotification.NONE
    );
}

/* PLAYER FUNCTIONS */

function updateTeams() {
    players = room.getPlayerList();
    teamRed = players.filter((p) => p.team == Team.RED);
    teamBlue = players.filter((p) => p.team == Team.BLUE);
    teamSpec = players.filter((p) => p.team == Team.SPECTATORS);
}

function updateAdmins(excludedPlayerID = 0) {
    if (players.length != 0 && players.filter((p) => p.admin).length < maxAdmins) {
        let playerArray = players.filter((p) => p.id != excludedPlayerID && !p.admin);
        let arrayID = playerArray.map((player) => player.id);
        room.setPlayerAdmin(Math.min(...arrayID), true);
    }
}

function getRole(player) {
    return (
        !!masterList.find((a) => a == authArray[player.id][0]) * 2 +
        !!adminList.find((a) => a[0] == authArray[player.id][0]) * 1 +
        player.admin * 1
    );
}

function ghostKickHandle(oldP, newP) {
    var teamArrayId = getTeamArray(oldP.team).map((p) => p.id);
    teamArrayId.splice(teamArrayId.findIndex((id) => id == oldP.id), 1, newP.id);

    room.kickPlayer(oldP.id, 'Ghost kick', false);
    room.setPlayerTeam(newP.id, oldP.team);
    room.setPlayerAdmin(newP.id, oldP.admin);
    room.reorderPlayers(teamArrayId, true);

    if (oldP.team != Team.SPECTATORS && playSituation != Situation.STOP) {
        var discProp = room.getPlayerDiscProperties(oldP.id);
        room.setPlayerDiscProperties(newP.id, discProp);
    }
}

/* ACTIVITY FUNCTIONS */

function handleActivityPlayer(player) {
    let pComp = getPlayerComp(player);
    if (pComp != null) {
        pComp.inactivityTicks++;
        return pComp.inactivityTicks;
    }
    return 0;
}

function handleActivityPlayerTeamChange(changedPlayer) {
    if (changedPlayer.team == Team.SPECTATORS) {
        let pComp = getPlayerComp(changedPlayer);
        if (pComp != null) pComp.inactivityTicks = 0;
    }
}

function handleActivityStop() {
    for (let player of players) {
        let pComp = getPlayerComp(player);
        if (pComp != null) pComp.inactivityTicks = 0;
    }
}

function handleActivity() {
    if (gameState == State.PLAY && players.length > 1) {
        var playerMaxInactivity = 0;
        for (let player of teamRed) {
            var playerInactivity = handleActivityPlayer(player);
            playerMaxInactivity = Math.max(playerInactivity, playerMaxInactivity);
        }
        for (let player of teamBlue) {
            var playerInactivity = handleActivityPlayer(player);
            playerMaxInactivity = Math.max(playerInactivity, playerMaxInactivity);
        }
        if (playerMaxInactivity >= maxInactivity * 60 * 60) {
            cancelGameVariable = true;
            room.stopGame();
            room.sendAnnouncement(
                '‚ö†Ô∏è Game was stopped due to inactivity !',
                null,
                announcementColor,
                'bold',
                HaxNotification.CHAT
            );
            handleActivityStop();
        }
    }
}

/* LINEUP FUNCTIONS */

function getStartingLineups() {
    var compositions = [[], []];
    for (let player of teamRed) {
        compositions[0].push(
            new PlayerComposition(player, authArray[player.id][0], [0], [])
        );
    }
    for (let player of teamBlue) {
        compositions[1].push(
            new PlayerComposition(player, authArray[player.id][0], [0], [])
        );
    }
    return compositions;
}

function handleLineupChangeTeamChange(changedPlayer) {
    if (gameState != State.STOP) {
        var playerLineup;
        if (changedPlayer.team == Team.RED) {
            // player gets in red team
            var redLineupAuth = game.playerComp[0].map((p) => p.auth);
            var ind = redLineupAuth.findIndex((auth) => auth == authArray[changedPlayer.id][0]);
            if (ind != -1) {
                // Player goes back in
                playerLineup = game.playerComp[0][ind];
                if (playerLineup.timeExit.includes(game.scores.time)) {
                    // gets subbed off then in at the exact same time -> no sub
                    playerLineup.timeExit = playerLineup.timeExit.filter((t) => t != game.scores.time);
                } else {
                    playerLineup.timeEntry.push(game.scores.time);
                }
            } else {
                playerLineup = new PlayerComposition(
                    changedPlayer,
                    authArray[changedPlayer.id][0],
                    [game.scores.time],
                    []
                );
                game.playerComp[0].push(playerLineup);
            }
        } else if (changedPlayer.team == Team.BLUE) {
            // player gets in blue team
            var blueLineupAuth = game.playerComp[1].map((p) => p.auth);
            var ind = blueLineupAuth.findIndex((auth) => auth == authArray[changedPlayer.id][0]);
            if (ind != -1) {
                // Player goes back in
                playerLineup = game.playerComp[1][ind];
                if (playerLineup.timeExit.includes(game.scores.time)) {
                    // gets subbed off then in at the exact same time -> no sub
                    playerLineup.timeExit = playerLineup.timeExit.filter((t) => t != game.scores.time);
                } else {
                    playerLineup.timeEntry.push(game.scores.time);
                }
            } else {
                playerLineup = new PlayerComposition(
                    changedPlayer,
                    authArray[changedPlayer.id][0],
                    [game.scores.time],
                    []
                );
                game.playerComp[1].push(playerLineup);
            }
        }
        if (teamRed.some((r) => r.id == changedPlayer.id)) {
            // player leaves red team
            var redLineupAuth = game.playerComp[0].map((p) => p.auth);
            var ind = redLineupAuth.findIndex((auth) => auth == authArray[changedPlayer.id][0]);
            playerLineup = game.playerComp[0][ind];
            if (playerLineup.timeEntry.includes(game.scores.time)) {
                // gets subbed off then in at the exact same time -> no sub
                if (game.scores.time == 0) {
                    game.playerComp[0].splice(ind, 1);
                } else {
                    playerLineup.timeEntry = playerLineup.timeEntry.filter((t) => t != game.scores.time);
                }
            } else {
                playerLineup.timeExit.push(game.scores.time);
            }
        } else if (teamBlue.some((r) => r.id == changedPlayer.id)) {
            // player leaves blue team
            var blueLineupAuth = game.playerComp[1].map((p) => p.auth);
            var ind = blueLineupAuth.findIndex((auth) => auth == authArray[changedPlayer.id][0]);
            playerLineup = game.playerComp[1][ind];
            if (playerLineup.timeEntry.includes(game.scores.time)) {
                // gets subbed off then in at the exact same time -> no sub
                if (game.scores.time == 0) {
                    game.playerComp[1].splice(ind, 1);
                } else {
                    playerLineup.timeEntry = playerLineup.timeEntry.filter((t) => t != game.scores.time);
                }
            } else {
                playerLineup.timeExit.push(game.scores.time);
            }
        }
    }
}

function handleLineupChangeLeave(player) {
    if (playSituation != Situation.STOP) {
        if (player.team == Team.RED) {
            // player gets in red team
            var redLineupAuth = game.playerComp[0].map((p) => p.auth);
            var ind = redLineupAuth.findIndex((auth) => auth == authArray[player.id][0]);
            var playerLineup = game.playerComp[0][ind];
            if (playerLineup.timeEntry.includes(game.scores.time)) {
                // gets subbed off then in at the exact same time -> no sub
                if (game.scores.time == 0) {
                    game.playerComp[0].splice(ind, 1);
                } else {
                    playerLineup.timeEntry = playerLineup.timeEntry.filter((t) => t != game.scores.time);
                }
            } else {
                playerLineup.timeExit.push(game.scores.time);
            }
        } else if (player.team == Team.BLUE) {
            // player gets in blue team
            var blueLineupAuth = game.playerComp[1].map((p) => p.auth);
            var ind = blueLineupAuth.findIndex((auth) => auth == authArray[player.id][0]);
            var playerLineup = game.playerComp[1][ind];
            if (playerLineup.timeEntry.includes(game.scores.time)) {
                // gets subbed off then in at the exact same time -> no sub
                if (game.scores.time == 0) {
                    game.playerComp[1].splice(ind, 1);
                } else {
                    playerLineup.timeEntry = playerLineup.timeEntry.filter((t) => t != game.scores.time);
                }
            } else {
                playerLineup.timeExit.push(game.scores.time);
            }
        }
    }
}

/* STATS FUNCTIONS */

/* GK FUNCTIONS */

function handleGKTeam(team) {
    if (team == Team.SPECTATORS) {
        return null;
    }
    let teamArray = team == Team.RED ? teamRed : teamBlue;
    let playerGK = teamArray.reduce((prev, current) => {
        if (team == Team.RED) {
            return (prev?.position.x < current.position.x) ? prev : current
        } else {
            return (prev?.position.x > current.position.x) ? prev : current
        }
    }, null);
    let playerCompGK = getPlayerComp(playerGK);
    return playerCompGK;
}

function handleGK() {
    let redGK = handleGKTeam(Team.RED);
    if (redGK != null) {
        redGK.GKTicks++;
    }
    let blueGK = handleGKTeam(Team.BLUE);
    if (blueGK != null) {
        blueGK.GKTicks++;
    }
}

function getGK(team) {
    if (team == Team.SPECTATORS) {
        return null;
    }
    let teamArray = team == Team.RED ? game.playerComp[0] : game.playerComp[1];
    let playerGK = teamArray.reduce((prev, current) => {
        return (prev?.GKTicks > current.GKTicks) ? prev : current
    }, null);
    return playerGK;
}

function getCS(scores) {
    let playersNameCS = [];
    let redGK = getGK(Team.RED);
    let blueGK = getGK(Team.BLUE);
    if (redGK != null && scores.blue == 0) {
        playersNameCS.push(redGK.player.name);
    }
    if (blueGK != null && scores.red == 0) {
        playersNameCS.push(blueGK.player.name);
    }
    return playersNameCS;
}

function getCSString(scores) {
    let playersCS = getCS(scores);
    if (playersCS.length == 0) {
        return "ü•Ö No CS";
    } else if (playersCS.length == 1) {
        return `ü•Ö ${playersCS[0]} tuvo una CS.`;
    } else {
        return `ü•Ö ${playersCS[0]} and ${playersCS[1]} tuvo una CS.`;
    }
}

/* GLOBAL STATS FUNCTIONS */

function getLastTouchOfTheBall() {
    const ballPosition = room.getBallPosition();
    updateTeams();
    let playerArray = [];
    for (let player of players) {
        if (player.position != null) {
            var distanceToBall = pointDistance(player.position, ballPosition);
            if (distanceToBall < triggerDistance) {
                if (playSituation == Situation.KICKOFF) playSituation = Situation.PLAY;
                playerArray.push([player, distanceToBall]);
            }
        }
    }
    if (playerArray.length != 0) {
        let playerTouch = playerArray.sort((a, b) => a[1] - b[1])[0][0];
        if (lastTeamTouched == playerTouch.team || lastTeamTouched == Team.SPECTATORS) {
            if (lastTouches[0] == null || (lastTouches[0] != null && lastTouches[0].player.id != playerTouch.id)) {
                game.touchArray.push(
                    new BallTouch(
                        playerTouch,
                        game.scores.time,
                        getGoalGame(),
                        ballPosition
                    )
                );
                lastTouches[0] = checkGoalKickTouch(
                    game.touchArray,
                    game.touchArray.length - 1,
                    getGoalGame()
                );
                lastTouches[1] = checkGoalKickTouch(
                    game.touchArray,
                    game.touchArray.length - 2,
                    getGoalGame()
                );
            }
        }
        lastTeamTouched = playerTouch.team;
    }
}

function getBallSpeed() {
    var ballProp = room.getDiscProperties(0);
    return Math.sqrt(ballProp.xspeed ** 2 + ballProp.yspeed ** 2) * speedCoefficient;
}

function getGameStats() {
    if (playSituation == Situation.PLAY && gameState == State.PLAY) {
        lastTeamTouched == Team.RED ? possession[0]++ : possession[1]++;
        var ballPosition = room.getBallPosition();
        ballPosition.x < 0 ? actionZoneHalf[0]++ : actionZoneHalf[1]++;
    }
}

/* GOAL ATTRIBUTION FUNCTIONS */

function getGoalAttribution(team) {
    var goalAttribution = Array(2).fill(null);
    if (lastTouches[0] != null) {
        if (lastTouches[0].player.team == team) {
            // Direct goal scored by player
            if (lastTouches[1] != null && lastTouches[1].player.team == team) {
                goalAttribution = [lastTouches[0].player, lastTouches[1].player];
            } else {
                goalAttribution = [lastTouches[0].player, null];
            }
        } else {
            // Own goal
            goalAttribution = [lastTouches[0].player, null];
        }
    }
    return goalAttribution;
}

function getGoalString(team) {
    var goalString;
    var scores = game.scores;
    var goalAttribution = getGoalAttribution(team);
    if (goalAttribution[0] != null) {
        if (goalAttribution[0].team == team) {
            if (goalAttribution[1] != null && goalAttribution[1].team == team) {
                goalString = `‚öΩ ${getTimeGame(scores.time)} Golazo de ${goalAttribution[0].name} ! Asistencia de ${goalAttribution[1].name}. Velocidad : ${ballSpeed.toFixed(2)}km/h.`;
                game.goals.push(
                    new Goal(
                        scores.time,
                        team,
                        goalAttribution[0],
                        goalAttribution[1]
                    )
                );
            } else {
                goalString = `‚öΩ ${getTimeGame(scores.time)} Golazo de ${goalAttribution[0].name} ! Velocidad : ${ballSpeed.toFixed(2)}km/h.`;
                game.goals.push(
                    new Goal(scores.time, team, goalAttribution[0], null)
                );
            }
        } else {
            goalString = `üòÇ ${getTimeGame(scores.time)} Autogol de ${goalAttribution[0].name} ! Velocidad : ${ballSpeed.toFixed(2)}km/h.`;
            game.goals.push(
                new Goal(scores.time, team, goalAttribution[0], null)
            );
        }
    } else {
        goalString = `‚öΩ ${getTimeGame(scores.time)} Golazo para ${team == Team.RED ? 'red' : 'blue'} team ! Velocidad : ${ballSpeed.toFixed(2)}km/h.`;
        game.goals.push(
            new Goal(scores.time, team, null, null)
        );
    }

    return goalString;
}

/* GET STATS FUNCTIONS */

function actionReportCountTeam(goals, team) {
    let playerActionSummaryTeam = [];
    let indexTeam = team == Team.RED ? 0 : 1;
    let indexOtherTeam = team == Team.RED ? 1 : 0;
    for (let goal of goals[indexTeam]) {
        if (goal[0] != null) {
            if (playerActionSummaryTeam.find(a => a[0].id == goal[0].id)) {
                let index = playerActionSummaryTeam.findIndex(a => a[0].id == goal[0].id);
                playerActionSummaryTeam[index][1]++;
            } else {
                playerActionSummaryTeam.push([goal[0], 1, 0, 0]);
            }
            if (goal[1] != null) {
                if (playerActionSummaryTeam.find(a => a[0].id == goal[1].id)) {
                    let index = playerActionSummaryTeam.findIndex(a => a[0].id == goal[1].id);
                    playerActionSummaryTeam[index][2]++;
                } else {
                    playerActionSummaryTeam.push([goal[1], 0, 1, 0]);
                }
            }
        }
    }
    if (goals[indexOtherTeam].length == 0) {
        let playerCS = getGK(team)?.player;
        if (playerCS != null) {
            if (playerActionSummaryTeam.find(a => a[0].id == playerCS.id)) {
                let index = playerActionSummaryTeam.findIndex(a => a[0].id == playerCS.id);
                playerActionSummaryTeam[index][3]++;
            } else {
                playerActionSummaryTeam.push([playerCS, 0, 0, 1]);
            }
        }
    }

    playerActionSummaryTeam.sort((a, b) => (a[1] + a[2] + a[3]) - (b[1] + b[2] + b[3]));
    return playerActionSummaryTeam;
}

/* FETCH FUNCTIONS */

function fetchGametimeReport(game) {
    var fieldGametimeRed = {
        name: 'üî¥        **RED TEAM STATS**',
        value: '‚åõ __**Game Time:**__\n\n',
        inline: true,
    };
    var fieldGametimeBlue = {
        name: 'üîµ       **BLUE TEAM STATS**',
        value: '‚åõ __**Game Time:**__\n\n',
        inline: true,
    };
    var redTeamTimes = game.playerComp[0].map((p) => [p.player, 0]);
    for (let i = 0; i < game.playerComp[0].length; i++) {
        var player = game.playerComp[0][i];
        for (let j = 0; j < player.timeEntry.length; j++) {
            if (player.timeExit.length < j + 1) {
                redTeamTimes[i][1] += game.scores.time - player.timeEntry[j];
            } else {
                redTeamTimes[i][1] += player.timeExit[j] - player.timeEntry[j];
            }
        }
    }
    var blueTeamTimes = game.playerComp[1].map((p) => [p.player, 0]);
    for (let i = 0; i < game.playerComp[1].length; i++) {
        var player = game.playerComp[1][i];
        for (let j = 0; j < player.timeEntry.length; j++) {
            if (player.timeExit.length < j + 1) {
                blueTeamTimes[i][1] += game.scores.time - player.timeEntry[j];
            } else {
                blueTeamTimes[i][1] += player.timeExit[j] - player.timeEntry[j];
            }
        }
    }

    for (let time of redTeamTimes) {
        var minutes = getMinutesReport(time[1]);
        var seconds = getSecondsReport(time[1]);
        fieldGametimeRed.value += `> **${time[0].name}:** ${minutes > 0 ? `${minutes}m` : ''}` +
            `${seconds > 0 || minutes == 0 ? `${seconds}s` : ''}\n`;
    }
    fieldGametimeRed.value += `\n${blueTeamTimes.length - redTeamTimes.length > 0 ? '\n'.repeat(blueTeamTimes.length - redTeamTimes.length) : ''
        }`;
    fieldGametimeRed.value += '=====================';

    for (let time of blueTeamTimes) {
        var minutes = getMinutesReport(time[1]);
        var seconds = getSecondsReport(time[1]);
        fieldGametimeBlue.value += `> **${time[0].name}:** ${minutes > 0 ? `${minutes}m` : ''}` +
            `${seconds > 0 || minutes == 0 ? `${seconds}s` : ''}\n`;
    }
    fieldGametimeBlue.value += `\n${redTeamTimes.length - blueTeamTimes.length > 0 ? '\n'.repeat(redTeamTimes.length - blueTeamTimes.length) : ''
        }`;
    fieldGametimeBlue.value += '=====================';

    return [fieldGametimeRed, fieldGametimeBlue];
}

function fetchActionsSummaryReport(game) {
    var fieldReportRed = {
        name: 'üî¥        **RED TEAM STATS**',
        value: 'üìä __**Player Stats:**__\n\n',
        inline: true,
    };
    var fieldReportBlue = {
        name: 'üîµ       **BLUE TEAM STATS**',
        value: 'üìä __**Player Stats:**__\n\n',
        inline: true,
    };
    var goals = [[], []];
    for (let goal of game.goals) {
        goals[goal.team - 1].push([goal.striker, goal.assist]);
    }
    var redActions = actionReportCountTeam(goals, Team.RED);
    if (redActions.length > 0) {
        for (let act of redActions) {
            fieldReportRed.value += `> **${act[0].team != Team.RED ? '[OG] ' : ''}${act[0].name}:**` +
                `${act[1] > 0 ? ` ${act[1]}G` : ''}` +
                `${act[2] > 0 ? ` ${act[2]}A` : ''}` +
                `${act[3] > 0 ? ` ${act[3]}CS` : ''}\n`;
        }
    }
    var blueActions = actionReportCountTeam(goals, Team.BLUE);
    if (blueActions.length > 0) {
        for (let act of blueActions) {
            fieldReportBlue.value += `> **${act[0].team != Team.BLUE ? '[OG] ' : ''}${act[0].name}:**` +
                `${act[1] > 0 ? ` ${act[1]}G` : ''}` +
                `${act[2] > 0 ? ` ${act[2]}A` : ''}` +
                `${act[3] > 0 ? ` ${act[3]}CS` : ''}\n`;
        }
    }

    fieldReportRed.value += `\n${blueActions.length - redActions.length > 0 ? '\n'.repeat(blueActions.length - redActions.length) : ''
        }`;
    fieldReportRed.value += '=====================';

    fieldReportBlue.value += `\n${redActions.length - blueActions.length > 0 ? '\n'.repeat(redActions.length - blueActions.length) : ''
        }`;
    fieldReportBlue.value += '=====================';

    return [fieldReportRed, fieldReportBlue];
}

function fetchSummaryEmbed(game) {
    var fetchEndgame = [fetchGametimeReport, fetchActionsSummaryReport];
    var logChannel = gameWebhook;
    var fields = [
        {
            name: 'üî¥        **RED TEAM STATS**',
            value: '=====================\n\n',
            inline: true,
        },
        {
            name: 'üîµ       **BLUE TEAM STATS**',
            value: '=====================\n\n',
            inline: true,
        },
    ];
    for (let i = 0; i < fetchEndgame.length; i++) {
        var fieldsReport = fetchEndgame[i](game);
        fields[0].value += fieldsReport[0].value + '\n\n';
        fields[1].value += fieldsReport[1].value + '\n\n';
    }
    fields[0].value = fields[0].value.substring(0, fields[0].value.length - 2);
    fields[1].value = fields[1].value.substring(0, fields[1].value.length - 2);

    var possR = possession[0] / (possession[0] + possession[1]);
    var possB = 1 - possR;
    var possRString = (possR * 100).toFixed(0).toString();
    var possBString = (possB * 100).toFixed(0).toString();
    var zoneR = actionZoneHalf[0] / (actionZoneHalf[0] + actionZoneHalf[1]);
    var zoneB = 1 - zoneR;
    var zoneRString = (zoneR * 100).toFixed(0).toString();
    var zoneBString = (zoneB * 100).toFixed(0).toString();
    var win = (game.scores.red > game.scores.blue) * 1 + (game.scores.blue > game.scores.red) * 2;
    var objectBodyWebhook = {
        embeds: [
            {
                title: `üìù MATCH REPORT #${getIdReport()}`,
                description:
                    `**${getTimeEmbed(game.scores.time)}** ` +
                    (win == 1 ? '**Red Team** ' : 'Red Team ') + game.scores.red +
                    ' - ' +
                    game.scores.blue + (win == 2 ? ' **Blue Team**' : ' Blue Team') +
                    '\n```c\nPossession: ' + possRString + '% - ' + possBString + '%' +
                    '\nAction Zone: ' + zoneRString + '% - ' + zoneBString + '%\n```\n\n',
                color: 9567999,
                fields: fields,
                footer: {
                    text: `Recording: ${getRecordingName(game)}`,
                },
                timestamp: new Date().toISOString(),
            },
        ],
        username: roomName
    };
    if (logChannel != '') {
        fetch(logChannel, {
            method: 'POST',
            body: JSON.stringify(objectBodyWebhook),
            headers: {
                'Content-Type': 'application/json',
            },
        }).then((res) => res);
    }
}

/* EVENTS */

/* PLAYER MOVEMENT */

room.onPlayerJoin = function (player) {
    authArray[player.id] = [player.auth, player.conn];
    if (roomWebhook != '') {
        fetch(roomWebhook, {
            method: 'POST',
            body: JSON.stringify({
                content: `[${getDate()}] ‚û°Ô∏è JOIN (${players.length + 1}/${maxPlayers})\n**` +
                    `${player.name}** [${authArray[player.id][0]}] {${authArray[player.id][1]}}`,
                username: roomName,
            }),
            headers: {
                'Content-Type': 'application/json',
            },
        }).then((res) => res);
    }
    room.sendAnnouncement(
        `‚ù§ Bienvenido ${player.name} a la sala. BUSCAMOS ADMINS PARA LA SALA INFO AQUI > https://discord.gg/qg3PKnXkHA \n sala creada por ardilla ‚ù§`,
        player.id,
        welcomeColor,
        'bold',
        HaxNotification.CHAT
    );
    updateTeams();
    updateAdmins();
    if (masterList.findIndex((auth) => auth == player.auth) != -1) {
        room.sendAnnouncement(
            `Master ${player.name} Se conect√≥ a la sala !`,
            null,
            announcementColor,
            'bold',
            HaxNotification.CHAT
        );
        room.setPlayerAdmin(player.id, true);
    } else if (adminList.map((a) => a[0]).findIndex((auth) => auth == player.auth) != -1) {
        room.sendAnnouncement(
            `Admin ${player.name} Se conect√≥ a la sala !`,
            null,
            announcementColor,
            'bold',
            HaxNotification.CHAT
        );
        room.setPlayerAdmin(player.id, true);
    }
    var sameAuthCheck = players.filter((p) => p.id != player.id && authArray[p.id][0] == player.auth);
    if (sameAuthCheck.length > 0 && !debugMode) {
        var oldPlayerArray = players.filter((p) => p.id != player.id && authArray[p.id][0] == player.auth);
        for (let oldPlayer of oldPlayerArray) {
            ghostKickHandle(oldPlayer, player);
        }
    }
};

room.onPlayerTeamChange = function (changedPlayer, byPlayer) {
    handleLineupChangeTeamChange(changedPlayer);
    updateTeams();
    handleActivityPlayerTeamChange(changedPlayer);
};

room.onPlayerLeave = function (player) {
    setTimeout(() => {
        if (!kickFetchVariable) {
            if (roomWebhook != '') {
                var stringContent = `[${getDate()}] ‚¨ÖÔ∏è LEAVE (${players.length}/${maxPlayers})\n**${player.name}**` +
                    `[${authArray[player.id][0]}] {${authArray[player.id][1]}}`;
                fetch(roomWebhook, {
                    method: 'POST',
                    body: JSON.stringify({
                        content: stringContent,
                        username: roomName,
                    }),
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }).then((res) => res);
            }
        } else kickFetchVariable = false;
    }, 10);
    handleLineupChangeLeave(player);
    updateTeams();
    updateAdmins();
};

room.onPlayerKicked = function (kickedPlayer, reason, ban, byPlayer) {
    kickFetchVariable = true;
    if (roomWebhook != '') {
        var stringContent = `[${getDate()}] ‚õî ${ban ? 'BAN' : 'KICK'} (${players.length}/${maxPlayers})\n` +
            `**${kickedPlayer.name}** [${authArray[kickedPlayer.id][0]}] {${authArray[kickedPlayer.id][1]}} was ${ban ? 'banned' : 'kicked'}` +
            `${byPlayer != null ? ' by **' + byPlayer.name + '** [' + authArray[byPlayer.id][0] + '] {' + authArray[byPlayer.id][1] + '}' : ''}`
        fetch(roomWebhook, {
            method: 'POST',
            body: JSON.stringify({
                content: stringContent,
                username: roomName,
            }),
            headers: {
                'Content-Type': 'application/json',
            },
        }).then((res) => res);
    }
    if ((ban && ((byPlayer != null &&
        (byPlayer.id == kickedPlayer.id || getRole(byPlayer) < Role.MASTER)) || getRole(kickedPlayer) == Role.MASTER)) || disableBans
    ) {
        room.clearBan(kickedPlayer.id);
        return;
    }
    if (byPlayer != null && getRole(byPlayer) < Role.ADMIN_PERM) {
        room.sendAnnouncement(
            'You are not allowed to kick/ban players !',
            byPlayer.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
        room.setPlayerAdmin(byPlayer.id, false);
        return;
    }
    if (ban) banList.push([kickedPlayer.name, kickedPlayer.id]);
};

/* PLAYER ACTIVITY */

room.onPlayerChat = function (player, message) {
    let msgArray = message.split(/ +/);
    if (!hideClaimMessage || msgArray[0] != '!claim') {
        if (roomWebhook != '')
            fetch(roomWebhook, {
                method: 'POST',
                body: JSON.stringify({
                    content: `[${getDate()}] üí¨ CHAT\n**${player.name}** : ${message.replace('@', '@ ')}`,
                    username: roomName,
                }),
                headers: {
                    'Content-Type': 'application/json',
                },
            }).then((res) => res);
    }
    if (msgArray[0][0] == '!') {
        let command = getCommand(msgArray[0].slice(1).toLowerCase());
        if (command != false && commands[command].roles <= getRole(player)) commands[command].function(player, message);
        else
            room.sendAnnouncement(
                `The command you tried to enter does not exist for you. Please enter '!help' to get the available commands to you.`,
                player.id,
                errorColor,
                'bold',
                HaxNotification.CHAT
            );
        return false;
    }
    if (msgArray[0].toLowerCase() == 't') {
        teamChat(player, message);
        return false;
    }
    if (msgArray[0].substring(0, 2) === '@@') {
        playerChat(player, message);
        return false;
    }
};

room.onPlayerActivity = function (player) {
    if (gameState !== State.STOP) {
        let pComp = getPlayerComp(player);
        if (pComp != null) pComp.inactivityTicks = 0;
    }
};

room.onPlayerBallKick = function (player) {
    if (playSituation != Situation.GOAL) {
        var ballPosition = room.getBallPosition();
        if (game.touchArray.length == 0 || player.id != game.touchArray[game.touchArray.length - 1].player.id) {
            if (playSituation == Situation.KICKOFF) playSituation = Situation.PLAY;
            lastTeamTouched = player.team;
            game.touchArray.push(
                new BallTouch(
                    player,
                    game.scores.time,
                    getGoalGame(),
                    ballPosition
                )
            );
            lastTouches[0] = checkGoalKickTouch(
                game.touchArray,
                game.touchArray.length - 1,
                getGoalGame()
            );
            lastTouches[1] = checkGoalKickTouch(
                game.touchArray,
                game.touchArray.length - 2,
                getGoalGame()
            );
        }
    }
};

/* GAME MANAGEMENT */

room.onGameStart = function (byPlayer) {
    clearTimeout(startTimeout);
    if (byPlayer != null) clearTimeout(stopTimeout);
    game = new Game();
    possession = [0, 0];
    actionZoneHalf = [0, 0];
    gameState = State.PLAY;
    endGameVariable = false;
    goldenGoal = false;
    playSituation = Situation.KICKOFF;
    lastTouches = Array(2).fill(null);
    lastTeamTouched = Team.SPECTATORS;
    calculateStadiumVariables();
};

room.onGameStop = function (byPlayer) {
    clearTimeout(stopTimeout);
    clearTimeout(unpauseTimeout);
    if (byPlayer != null) clearTimeout(startTimeout);
    game.rec = room.stopRecording();
    if (
        !cancelGameVariable && game.playerComp[0].length + game.playerComp[1].length > 0 &&
        (
            (game.scores.timeLimit != 0 &&
                ((game.scores.time >= 0.5 * game.scores.timeLimit &&
                    game.scores.time < 0.75 * game.scores.timeLimit &&
                    game.scores.red != game.scores.blue) ||
                    game.scores.time >= 0.75 * game.scores.timeLimit)
            ) ||
            endGameVariable
        )
    ) {
        fetchSummaryEmbed(game);
        if (fetchRecordingVariable) {
            setTimeout((gameEnd) => { fetchRecording(gameEnd); }, 500, game);
        }
    }
    cancelGameVariable = false;
    gameState = State.STOP;
    playSituation = Situation.STOP;
    updateTeams();
    handleActivityStop();
};

room.onGamePause = function (byPlayer) {
    if (mentionPlayersUnpause && gameState == State.PAUSE) {
        if (byPlayer != null) {
            room.sendAnnouncement(
                `Juego pausado por ${byPlayer.name} !`,
                null,
                defaultColor,
                'bold',
                HaxNotification.NONE
            );
        } else {
            room.sendAnnouncement(
                `Game paused !`,
                null,
                defaultColor,
                'bold',
                HaxNotification.NONE
            );
        }
    }
    clearTimeout(unpauseTimeout);
    gameState = State.PAUSE;
};

room.onGameUnpause = function (byPlayer) {
    unpauseTimeout = setTimeout(() => {
        gameState = State.PLAY;
    }, 2000);
    if (mentionPlayersUnpause) {
        if (byPlayer != null) {
            room.sendAnnouncement(
                `Juego despausado por ${byPlayer.name} !`,
                null,
                defaultColor,
                'bold',
                HaxNotification.NONE
            );
        } else {
            room.sendAnnouncement(
                `Game unpaused !`,
                null,
                defaultColor,
                'bold',
                HaxNotification.NONE
            );
        }
    }
};

room.onTeamGoal = function (team) {
    const scores = room.getScores();
    game.scores = scores;
    playSituation = Situation.GOAL;
    ballSpeed = getBallSpeed();
    var goalString = getGoalString(team);
    room.sendAnnouncement(
        goalString,
        null,
        team == Team.RED ? redColor : blueColor,
        null,
        HaxNotification.CHAT
    );
    if (roomWebhook != '') {
        fetch(roomWebhook, {
            method: 'POST',
            body: JSON.stringify({
                content: `[${getDate()}] ${goalString}`,
                username: roomName,
            }),
            headers: {
                'Content-Type': 'application/json',
            },
        }).then((res) => res);
    }
    if ((scores.scoreLimit != 0 && (scores.red == scores.scoreLimit || scores.blue == scores.scoreLimit)) || goldenGoal) {
        endGame(team);
        goldenGoal = false;
        stopTimeout = setTimeout(() => {
            room.stopGame();
        }, 1000);
    }
};

room.onPositionsReset = function () {
    lastTouches = Array(2).fill(null);
    lastTeamTouched = Team.SPECTATORS;
    playSituation = Situation.KICKOFF;
};

/* MISCELLANEOUS */

room.onRoomLink = function (url) {
    console.log(`${url}\nmasterPassword : ${masterPassword}`);
    if (roomWebhook != '') {
        fetch(roomWebhook, {
            method: 'POST',
            body: JSON.stringify({
                content: `[${getDate()}] üîó LINK ${url}\nmasterPassword : ${masterPassword}`,
                username: roomName,
            }),
            headers: {
                'Content-Type': 'application/json',
            },
        }).then((res) => res);
    }
};

room.onPlayerAdminChange = function (changedPlayer, byPlayer) {
    updateTeams();
    if (!changedPlayer.admin && getRole(changedPlayer) >= Role.ADMIN_TEMP) {
        room.setPlayerAdmin(changedPlayer.id, true);
        return;
    }
    updateAdmins(byPlayer != null && !changedPlayer.admin && changedPlayer.id == byPlayer.id ? changedPlayer.id : 0);
};

room.onKickRateLimitSet = function (min, rate, burst, byPlayer) {
    if (byPlayer != null) {
        room.sendAnnouncement(
            `It is not allowed to change the kickrate limit. It must stay at "6-0-0".`,
            player.id,
            errorColor,
            'bold',
            HaxNotification.CHAT
        );
        room.setKickRateLimit(6, 0, 0);
    }
};

room.onStadiumChange = function (newStadiumName, byPlayer) {
    checkStadiumVariable = true;
};

room.onGameTick = function () {
    checkTime();
    getLastTouchOfTheBall();
    getGameStats();
    handleActivity();
};
